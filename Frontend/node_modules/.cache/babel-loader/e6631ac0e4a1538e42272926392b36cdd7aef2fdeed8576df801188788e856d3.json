{"ast":null,"code":"var _jsxFileName = \"E:\\\\Descargas\\\\Nueva carpeta\\\\Proyecto Desarrollo 1\\\\Frontend\\\\src\\\\formularios\\\\RegistroDiscapacitados.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BotonesModoOscuroVolver from '../components/BotonesModoOscuroVolver';\nimport { verificarCorreo } from '../utils/verificarCorreo';\nimport '../styles/light.css';\nimport '../stylesdark/dark.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FormularioDiscapacitados() {\n  _s();\n  const [formData, setFormData] = useState({\n    nombre: '',\n    apellido: '',\n    correo: '',\n    password: ''\n  });\n  const [errores, setErrores] = useState({\n    nombre: '',\n    apellido: '',\n    correo: '',\n    password: ''\n  });\n  const [modoOscuro, setModoOscuro] = useState(false);\n  const [correoExistente, setCorreoExistente] = useState(false);\n  const [validandoCorreo, setValidandoCorreo] = useState(false);\n  const [pasoActual, setPasoActual] = useState(0);\n  const [reconocimientoActivo, setReconocimientoActivo] = useState(false);\n  const [mensajeEnviado, setMensajeEnviado] = useState(false);\n  const [cargando, setCargando] = useState(false);\n  const [bloquearEventos, setBloquearEventos] = useState(false);\n  const recognitionRef = useRef(null);\n  const navigate = useNavigate();\n  const pasoActualRef = useRef(pasoActual);\n  const nombreRef = useRef(null);\n  const apellidoRef = useRef(null);\n  const correoRef = useRef(null);\n  const passwordRef = useRef(null);\n  const resultadoVozRef = useRef('');\n  const pasos = ['nombre', 'apellido', 'correo', 'password', 'registrar'];\n  const instrucciones = {\n    nombre: 'Gracias por preferir nuestra aplicacion, esperamos poder ayudarte al maximo. Para iniciar con el registro de tu cuenta. Por favor, indicanos tu nombre',\n    apellido: 'Ahora por favor, di tu apellido.',\n    correo: 'Ahora indica tu correo electrónico.',\n    password: 'Ahora indica tu contraseña. Debe tener al menos 6 caracteres.',\n    registrar: 'Registrando tu información.'\n  };\n  const referencias = {\n    nombre: nombreRef,\n    apellido: apellidoRef,\n    correo: correoRef,\n    password: passwordRef\n  };\n  const tiemposPorPaso = {\n    nombre: 5000,\n    apellido: 5000,\n    correo: 12000,\n    password: 8000\n  };\n\n  // Funciones de validación\n  const validarNombre = nombre => {\n    if (!nombre.trim()) return \"Este campo es requerido\";\n    if (!/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$/.test(nombre)) {\n      return \"Solo se permiten letras y espacios\";\n    }\n    return \"\";\n  };\n  const validarCorreo = correo => {\n    if (!correo) return \"Este campo es requerido\";\n    if (!correo.includes(\"@\")) return \"El correo debe contener @\";\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/.test(correo)) {\n      return \"Formato inválido (ej: usuario@dominio.com)\";\n    }\n    return \"\";\n  };\n  const validarPassword = password => {\n    if (!password) return \"Este campo es requerido\";\n    if (/\\s/.test(password)) return \"No se permiten espacios\";\n    if (password.length < 6) return \"Mínimo 6 caracteres\";\n    return \"\";\n  };\n  const manejarValidaciones = (name, value) => {\n    let error = \"\";\n    switch (name) {\n      case \"nombre\":\n      case \"apellido\":\n        error = validarNombre(value);\n        break;\n      case \"correo\":\n        error = validarCorreo(value);\n        break;\n      case \"password\":\n        error = validarPassword(value);\n        break;\n      default:\n        break;\n    }\n    setErrores(prev => ({\n      ...prev,\n      [name]: error\n    }));\n  };\n  useEffect(() => {\n    document.body.classList.toggle('dark', modoOscuro);\n    if ('webkitSpeechRecognition' in window) {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.lang = 'es-ES';\n      recognition.continuous = false;\n      recognition.interimResults = false;\n      recognition.onresult = event => {\n        var _event$results, _event$results$, _event$results$$;\n        const resultado = (_event$results = event.results) === null || _event$results === void 0 ? void 0 : (_event$results$ = _event$results[0]) === null || _event$results$ === void 0 ? void 0 : (_event$results$$ = _event$results$[0]) === null || _event$results$$ === void 0 ? void 0 : _event$results$$.transcript.trim().toLowerCase();\n        resultadoVozRef.current = resultado;\n        if (resultado) {\n          manejarResultado(resultado);\n        }\n      };\n      recognition.onend = () => {\n        const resultado = resultadoVozRef.current;\n        if (!resultado) {\n          const paso = pasos[pasoActualRef.current];\n          const campo = paso === 'password' ? 'contraseña' : paso;\n          hablar(`No se escuchó. Por favor, dinos tu ${campo}.`);\n        } else {\n          resultadoVozRef.current = ''; // Limpieza\n        }\n      };\n      recognition.onerror = event => {\n        hablar('Tal vez no se te escuchó. Por favor, intentalo de nuevo.');\n        console.error('Reconocimiento error:', event.error);\n      };\n      recognitionRef.current = recognition;\n    }\n    setReconocimientoActivo(true);\n    iniciarPaso(0);\n    // eslint-disable-next-line\n  }, [modoOscuro]);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (formData.correo) {\n        verificarCorreo(formData.correo, setCorreoExistente, setValidandoCorreo);\n      }\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [formData.correo]);\n  useEffect(() => {\n    pasoActualRef.current = pasoActual;\n  }, [pasoActual]);\n  const hablar = (texto, callback = null, autoReconocer = true) => {\n    var _recognitionRef$curre;\n    setReconocimientoActivo(false);\n    setBloquearEventos(true);\n    (_recognitionRef$curre = recognitionRef.current) === null || _recognitionRef$curre === void 0 ? void 0 : _recognitionRef$curre.abort();\n    const msg = new SpeechSynthesisUtterance(texto);\n    msg.lang = 'es-ES';\n    msg.onend = () => {\n      setBloquearEventos(false);\n      if (callback) callback();\n      if (autoReconocer) {\n        setTimeout(() => iniciarReconocimiento(), 350);\n      }\n    };\n    window.speechSynthesis.cancel();\n    window.speechSynthesis.speak(msg);\n  };\n  const iniciarPaso = index => {\n    setPasoActual(index);\n    const paso = pasos[index];\n    const ref = referencias[paso];\n    if (ref !== null && ref !== void 0 && ref.current) ref.current.focus();\n    setTimeout(() => {\n      hablar(instrucciones[paso]);\n    }, 400);\n  };\n  const avanzarPaso = () => {\n    setPasoActual(prevPaso => {\n      const siguiente = Math.min(prevPaso + 1, pasos.length - 1);\n      if (pasos[siguiente] === 'registrar') {\n        var _recognitionRef$curre2;\n        setPasoActual(siguiente);\n        (_recognitionRef$curre2 = recognitionRef.current) === null || _recognitionRef$curre2 === void 0 ? void 0 : _recognitionRef$curre2.abort();\n        hablar(instrucciones.registrar, () => {\n          setTimeout(manejarEnvioFormulario, 1000);\n        }, false);\n      } else {\n        setTimeout(() => iniciarPaso(siguiente), 250);\n      }\n      return siguiente;\n    });\n  };\n  useEffect(() => {\n    // Verificar si todos los campos están completos y válidos\n    const todosCompletos = formData.nombre.trim() && formData.apellido.trim() && formData.correo.trim() && formData.password.trim() && !errores.nombre && !errores.apellido && !errores.correo && !errores.password && !correoExistente;\n    if (todosCompletos && !mensajeEnviado && !cargando) {\n      manejarEnvioFormulario();\n    } // \n  }, [formData, errores, correoExistente, mensajeEnviado, cargando]);\n  const reproducirBeep = () => {\n    const context = new (window.AudioContext || window.webkitAudioContext)();\n    const o = context.createOscillator();\n    const g = context.createGain();\n    o.type = 'sine';\n    o.frequency.value = 1000;\n    o.connect(g);\n    g.connect(context.destination);\n    o.start();\n    g.gain.exponentialRampToValueAtTime(0.0001, context.currentTime + 0.1);\n    o.stop(context.currentTime + 0.1);\n  };\n  let timeoutReconocimiento;\n  const iniciarReconocimiento = () => {\n    if (!recognitionRef.current) return;\n    try {\n      recognitionRef.current.abort();\n      resultadoVozRef.current = '';\n      recognitionRef.current.start();\n      setReconocimientoActivo(true);\n      const paso = pasos[pasoActualRef.current];\n      const duracion = tiemposPorPaso[paso] || 7000;\n      clearTimeout(timeoutReconocimiento);\n      timeoutReconocimiento = setTimeout(() => {\n        var _recognitionRef$curre3;\n        (_recognitionRef$curre3 = recognitionRef.current) === null || _recognitionRef$curre3 === void 0 ? void 0 : _recognitionRef$curre3.stop();\n        setReconocimientoActivo(false);\n        reproducirBeep();\n      }, duracion);\n    } catch (error) {\n      console.error('Error iniciando reconocimiento:', error);\n      hablar('Hubo un error iniciando el micrófono.');\n    }\n  };\n  const formatearNombre = texto => {\n    return texto.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '').replace(/[^a-zA-Z\\s]/g, '').replace(/\\s+/g, ' ').trim().toLowerCase().replace(/(^\\w{1})|(\\s+\\w{1})/g, l => l.toUpperCase());\n  };\n  const manejarResultado = resultado => {\n    const paso = pasos[pasoActualRef.current];\n    switch (paso) {\n      case 'nombre':\n      case 'apellido':\n        const valorLimpio = formatearNombre(resultado);\n        if (!valorLimpio) {\n          hablar(`El ${paso} no puede contener símbolos ni quedar vacío. Por favor, di tu ${paso} nuevamente.`, () => iniciarPaso(pasoActualRef.current));\n        } else {\n          setFormData(prev => ({\n            ...prev,\n            [paso]: valorLimpio\n          }));\n          manejarValidaciones(paso, valorLimpio);\n          avanzarPaso();\n        }\n        break;\n      case 'correo':\n        {\n          let correo = resultado.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '').toLowerCase().replace(/\\s+/g, '').replace(/arroba/g, '@').replace(/punto/g, '.').replace(/guionbajo|guion bajo/g, '_').replace(/guion/g, '-');\n          const tieneArroba = correo.includes('@');\n          const tienePunto = correo.includes('.');\n          const terminaConDominio = /\\.(com|co|org|edu|net|gov|io|es)$/.test(correo);\n          if (tieneArroba && tienePunto && terminaConDominio) {\n            verificarCorreo(correo, existe => {\n              if (existe) {\n                setCorreoExistente(true);\n                setErrores(prev => ({\n                  ...prev,\n                  correo: \"\"\n                }));\n                hablar('Este correo ya está registrado. Por favor, di un correo diferente.', () => iniciarPaso(pasoActualRef.current));\n              } else {\n                setCorreoExistente(false);\n                setFormData(prev => ({\n                  ...prev,\n                  correo\n                }));\n                manejarValidaciones('correo', correo);\n                avanzarPaso();\n              }\n            }, setValidandoCorreo);\n          } else {\n            setErrores(prev => ({\n              ...prev,\n              correo: \"\"\n            }));\n            setErrores(prev => ({\n              ...prev,\n              correo: \"Formato de correo inválido\"\n            }));\n            hablar('Ese correo no parece válido. Inténtalo de nuevo.', () => iniciarPaso(pasoActualRef.current));\n          }\n          break;\n        }\n      case 'password':\n        {\n          const passwordSinEspacios = resultado.replace(/\\s+/g, '');\n          if (passwordSinEspacios.length < 6) {\n            setErrores(prev => ({\n              ...prev,\n              password: \"Mínimo 6 caracteres\"\n            }));\n            hablar('La contraseña debe tener al menos 6 caracteres y no debe contener espacios. Por favor, di tu contraseña nuevamente.', () => iniciarPaso(pasoActualRef.current));\n          } else {\n            setFormData(prev => ({\n              ...prev,\n              password: passwordSinEspacios\n            }));\n            manejarValidaciones('password', passwordSinEspacios);\n            avanzarPaso();\n          }\n          break;\n        }\n      default:\n        break;\n    }\n  };\n  const manejarEnvioFormulario = async () => {\n    // Verificar campos vacíos primero\n    const camposVacios = {\n      nombre: !formData.nombre.trim(),\n      apellido: !formData.apellido.trim(),\n      correo: !formData.correo.trim(),\n      password: !formData.password.trim()\n    };\n\n    // 2. Si hay campos vacíos\n    if (Object.values(camposVacios).some(vacio => vacio)) {\n      // Establecer errores visuales\n      setErrores({\n        nombre: camposVacios.nombre ? \"Este campo es requerido\" : \"\",\n        apellido: camposVacios.apellido ? \"Este campo es requerido\" : \"\",\n        correo: camposVacios.correo ? \"Este campo es requerido\" : \"\",\n        password: camposVacios.password ? \"Este campo es requerido\" : \"\"\n      });\n\n      // Encontrar el primer campo vacío\n      const primerCampoVacio = Object.keys(camposVacios).find(key => camposVacios[key]);\n      if (primerCampoVacio) {\n        // Obtener el índice del paso correspondiente al campo vacío\n        const paso = pasos.indexOf(primerCampoVacio);\n        if (paso !== -1) {\n          // Anular el sistema de pasos actual y enfocar el campo vacío\n          setPasoActual(paso);\n          const ref = referencias[primerCampoVacio];\n          if (ref !== null && ref !== void 0 && ref.current) ref.current.focus();\n\n          // Dar instrucciones por voz\n          hablar(`Por favor, completa el campo ${primerCampoVacio} antes de continuar.`, () => iniciarReconocimiento(), false);\n        }\n      }\n      return;\n    }\n\n    // Luego validar el formato de los campos\n    const erroresActuales = {\n      nombre: validarNombre(formData.nombre),\n      apellido: validarNombre(formData.apellido),\n      correo: validarCorreo(formData.correo),\n      password: validarPassword(formData.password)\n    };\n    setErrores(erroresActuales);\n    const hayErrores = Object.values(erroresActuales).some(error => error !== \"\");\n    if (hayErrores || correoExistente) {\n      if (correoExistente) {\n        hablar('Este correo ya está registrado.', () => iniciarPaso(2));\n      }\n      return;\n    }\n    try {\n      setCargando(true);\n      const res = await fetch('http://localhost:4000/api/RegistroDiscapacitados', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (res.ok) {\n        setMensajeEnviado(true);\n        hablar('¡Registro exitoso! Serás redirigido al inicio de sesión.', () => navigate('/login'), false);\n      } else {\n        const err = await res.json();\n        hablar(`Error al registrar: ${err.message || 'Intenta más tarde'}`);\n      }\n    } catch (err) {\n      console.error(err);\n      hablar('Ocurrió un error al conectar con el servidor. Intenta más tarde.');\n    } finally {\n      setCargando(false);\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n    manejarValidaciones(name, value);\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n\n    // Solo permitir letras y espacios para nombre y apellido\n    if (name === 'nombre' || name === 'apellido') {\n      if (/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]*$/.test(value)) {\n        setFormData(prev => ({\n          ...prev,\n          [name]: value\n        }));\n        manejarValidaciones(name, value);\n      }\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n      manejarValidaciones(name, value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BotonesModoOscuroVolver, {\n      modoOscuro: modoOscuro,\n      setModoOscuro: setModoOscuro,\n      bloquearEventos: bloquearEventos,\n      reconocimientoActivo: reconocimientoActivo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contenedor-microfono\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-label\": \"Activar micr\\xF3fono para dictar informaci\\xF3n\",\n        \"aria-describedby\": \"instruccion-mic\",\n        onClick: iniciarReconocimiento,\n        disabled: cargando,\n        className: `boton-microfono ${reconocimientoActivo ? 'activo' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: reconocimientoActivo ? \"https://cdn-icons-png.flaticon.com/512/4712/4712035.png\" : \"https://cdn-icons-png.flaticon.com/512/4712/4712109.png\",\n          alt: reconocimientoActivo ? \"Micrófono activo\" : \"Micrófono inactivo\",\n          className: \"icono-microfono\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"instruccion-mic\",\n        hidden: true,\n        children: \"Presiona este bot\\xF3n para activar el micr\\xF3fono. Luego, sigue las instrucciones habladas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 9\n      }, this), cargando && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cargando-voz\",\n        children: \"Procesando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registro-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Formulario de Registro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nombre\",\n          children: [\"Nombre\", errores.nombre && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-campo\",\n            children: [\" * \", errores.nombre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: nombreRef,\n          type: \"text\",\n          id: \"nombre\",\n          name: \"nombre\",\n          value: formData.nombre,\n          onChange: handleInputChange,\n          onKeyDown: e => {\n            // Bloquear teclas numéricas y especiales\n            if (!/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]$/.test(e.key) && ![\"Backspace\", \"Delete\", \"ArrowLeft\", \"ArrowRight\", \"Tab\"].includes(e.key)) {\n              e.preventDefault();\n            }\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"apellido\",\n          children: [\"Apellido\", errores.apellido && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-campo\",\n            children: [\" * \", errores.apellido]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: apellidoRef,\n          type: \"text\",\n          id: \"apellido\",\n          name: \"apellido\",\n          value: formData.apellido,\n          onChange: handleInputChange,\n          onKeyDown: e => {\n            // Bloquear teclas numéricas y especiales\n            if (!/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]$/.test(e.key) && ![\"Backspace\", \"Delete\", \"ArrowLeft\", \"ArrowRight\", \"Tab\"].includes(e.key)) {\n              e.preventDefault();\n            }\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"correo\",\n          children: [\"Correo electr\\xF3nico:\", errores.correo && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-campo\",\n            children: [\" * \", errores.correo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 32\n          }, this), correoExistente && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"correo-registrado\",\n            children: \" * Este correo ya est\\xE1 registrado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 33\n          }, this), validandoCorreo && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"validando-correo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: correoRef,\n          type: \"email\",\n          id: \"correo\",\n          name: \"correo\",\n          value: formData.correo,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"Contrase\\xF1a (m\\xEDnimo 6 caracteres)\", errores.password && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-campo\",\n            children: [\" * \", errores.password]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: passwordRef,\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          onKeyDown: e => {\n            if (e.key === ' ') {\n              e.preventDefault();\n            }\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"botones-envio\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-enviar\",\n            onClick: manejarEnvioFormulario,\n            children: cargando ? 'Procesando...' : 'Registrarse'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"texto-cuenta\",\n            children: [\"\\xBFYa tienes una cuenta?\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-iniciar-sesion\",\n              onClick: () => navigate('/login'),\n              disabled: cargando,\n              children: \"Inicia sesi\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(FormularioDiscapacitados, \"5ZuJt4wsQKdoSn4FxRBTGvkqhys=\", false, function () {\n  return [useNavigate];\n});\n_c = FormularioDiscapacitados;\nexport default FormularioDiscapacitados;\nvar _c;\n$RefreshReg$(_c, \"FormularioDiscapacitados\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","BotonesModoOscuroVolver","verificarCorreo","jsxDEV","_jsxDEV","Fragment","_Fragment","FormularioDiscapacitados","_s","formData","setFormData","nombre","apellido","correo","password","errores","setErrores","modoOscuro","setModoOscuro","correoExistente","setCorreoExistente","validandoCorreo","setValidandoCorreo","pasoActual","setPasoActual","reconocimientoActivo","setReconocimientoActivo","mensajeEnviado","setMensajeEnviado","cargando","setCargando","bloquearEventos","setBloquearEventos","recognitionRef","navigate","pasoActualRef","nombreRef","apellidoRef","correoRef","passwordRef","resultadoVozRef","pasos","instrucciones","registrar","referencias","tiemposPorPaso","validarNombre","trim","test","validarCorreo","includes","validarPassword","length","manejarValidaciones","name","value","error","prev","document","body","classList","toggle","window","recognition","webkitSpeechRecognition","lang","continuous","interimResults","onresult","event","_event$results","_event$results$","_event$results$$","resultado","results","transcript","toLowerCase","current","manejarResultado","onend","paso","campo","hablar","onerror","console","iniciarPaso","timer","setTimeout","clearTimeout","texto","callback","autoReconocer","_recognitionRef$curre","abort","msg","SpeechSynthesisUtterance","iniciarReconocimiento","speechSynthesis","cancel","speak","index","ref","focus","avanzarPaso","prevPaso","siguiente","Math","min","_recognitionRef$curre2","manejarEnvioFormulario","todosCompletos","reproducirBeep","context","AudioContext","webkitAudioContext","o","createOscillator","g","createGain","type","frequency","connect","destination","start","gain","exponentialRampToValueAtTime","currentTime","stop","timeoutReconocimiento","duracion","_recognitionRef$curre3","formatearNombre","normalize","replace","l","toUpperCase","valorLimpio","tieneArroba","tienePunto","terminaConDominio","existe","passwordSinEspacios","camposVacios","Object","values","some","vacio","primerCampoVacio","keys","find","key","indexOf","erroresActuales","hayErrores","res","fetch","method","headers","JSON","stringify","ok","err","json","message","handleChange","e","target","handleInputChange","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","disabled","src","alt","id","hidden","onSubmit","preventDefault","htmlFor","onChange","onKeyDown","required","_c","$RefreshReg$"],"sources":["E:/Descargas/Nueva carpeta/Proyecto Desarrollo 1/Frontend/src/formularios/RegistroDiscapacitados.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BotonesModoOscuroVolver from '../components/BotonesModoOscuroVolver';\nimport { verificarCorreo } from '../utils/verificarCorreo';\nimport '../styles/light.css';\nimport '../stylesdark/dark.css';\n\nfunction FormularioDiscapacitados() {\n  const [formData, setFormData] = useState({\n    nombre: '',\n    apellido: '',\n    correo: '',\n    password: ''\n  });\n\n  const [errores, setErrores] = useState({\n    nombre: '',\n    apellido: '',\n    correo: '',\n    password: ''\n  });\n\n  const [modoOscuro, setModoOscuro] = useState(false);\n  const [correoExistente, setCorreoExistente] = useState(false);\n  const [validandoCorreo, setValidandoCorreo] = useState(false);\n  const [pasoActual, setPasoActual] = useState(0);\n  const [reconocimientoActivo, setReconocimientoActivo] = useState(false);\n  const [mensajeEnviado, setMensajeEnviado] = useState(false);\n  const [cargando, setCargando] = useState(false);\n  const [bloquearEventos, setBloquearEventos] = useState(false);\n  const recognitionRef = useRef(null);\n  const navigate = useNavigate();\n\n  const pasoActualRef = useRef(pasoActual);\n  const nombreRef = useRef(null);\n  const apellidoRef = useRef(null);\n  const correoRef = useRef(null);\n  const passwordRef = useRef(null);\n  const resultadoVozRef = useRef('');\n\n  const pasos = ['nombre', 'apellido', 'correo', 'password', 'registrar'];\n\n  const instrucciones = {\n    nombre: 'Gracias por preferir nuestra aplicacion, esperamos poder ayudarte al maximo. Para iniciar con el registro de tu cuenta. Por favor, indicanos tu nombre',\n    apellido: 'Ahora por favor, di tu apellido.',\n    correo: 'Ahora indica tu correo electrónico.',\n    password: 'Ahora indica tu contraseña. Debe tener al menos 6 caracteres.',\n    registrar: 'Registrando tu información.'\n  };\n\n  const referencias = {\n    nombre: nombreRef,\n    apellido: apellidoRef,\n    correo: correoRef,\n    password: passwordRef\n  };\n\n  const tiemposPorPaso = {\n    nombre: 5000,\n    apellido: 5000,\n    correo: 12000,\n    password: 8000\n  };\n\n  // Funciones de validación\n  const validarNombre = (nombre) => {\n    if (!nombre.trim()) return \"Este campo es requerido\";\n    if (!/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$/.test(nombre)) {\n      return \"Solo se permiten letras y espacios\";\n    }\n    return \"\";\n  };\n\n  const validarCorreo = (correo) => {\n    if (!correo) return \"Este campo es requerido\";\n    if (!correo.includes(\"@\")) return \"El correo debe contener @\";\n    if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/.test(correo)) {\n      return \"Formato inválido (ej: usuario@dominio.com)\";\n    }\n    return \"\";\n  };\n\n  const validarPassword = (password) => {\n    if (!password) return \"Este campo es requerido\";\n    if (/\\s/.test(password)) return \"No se permiten espacios\";\n    if (password.length < 6) return \"Mínimo 6 caracteres\";\n    return \"\";\n  };\n\n  const manejarValidaciones = (name, value) => {\n    let error = \"\";\n    switch (name) {\n      case \"nombre\":\n      case \"apellido\":\n        error = validarNombre(value);\n        break;\n      case \"correo\":\n        error = validarCorreo(value);\n        break;\n      case \"password\":\n        error = validarPassword(value);\n        break;\n      default:\n        break;\n    }\n    setErrores(prev => ({ ...prev, [name]: error }));\n  };\n\n  useEffect(() => {\n    document.body.classList.toggle('dark', modoOscuro);\n\n    if ('webkitSpeechRecognition' in window) {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.lang = 'es-ES';\n      recognition.continuous = false;\n      recognition.interimResults = false;\n\n      recognition.onresult = (event) => {\n        const resultado = event.results?.[0]?.[0]?.transcript.trim().toLowerCase();\n        resultadoVozRef.current = resultado;\n        if (resultado) {\n          manejarResultado(resultado);\n        }\n      };\n\n      recognition.onend = () => {\n        const resultado = resultadoVozRef.current;\n        if (!resultado) {\n          const paso = pasos[pasoActualRef.current];\n          const campo = paso === 'password' ? 'contraseña' : paso;\n          hablar(`No se escuchó. Por favor, dinos tu ${campo}.`);\n        } else {\n          resultadoVozRef.current = ''; // Limpieza\n        }\n      };\n\n      recognition.onerror = (event) => {\n        hablar('Tal vez no se te escuchó. Por favor, intentalo de nuevo.');\n        console.error('Reconocimiento error:', event.error);\n      };\n\n      recognitionRef.current = recognition;\n    }\n\n    setReconocimientoActivo(true);\n    iniciarPaso(0);\n    // eslint-disable-next-line\n  }, [modoOscuro]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (formData.correo) {\n        verificarCorreo(formData.correo, setCorreoExistente, setValidandoCorreo);\n      }\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [formData.correo]);\n\n  useEffect(() => {\n    pasoActualRef.current = pasoActual;\n  }, [pasoActual]);\n\n  const hablar = (texto, callback = null, autoReconocer = true) => {\n    setReconocimientoActivo(false);\n    setBloquearEventos(true); \n\n    recognitionRef.current?.abort();\n\n    const msg = new SpeechSynthesisUtterance(texto);\n    msg.lang = 'es-ES';\n    msg.onend = () => {\n      setBloquearEventos(false); \n      if (callback) callback();\n      if (autoReconocer) {\n        setTimeout(() => iniciarReconocimiento(), 350);\n      }\n    };\n\n    window.speechSynthesis.cancel();\n    window.speechSynthesis.speak(msg);\n  };\n\n  const iniciarPaso = (index) => {\n    setPasoActual(index);\n    const paso = pasos[index];\n    const ref = referencias[paso];\n    if (ref?.current) ref.current.focus();\n\n    setTimeout(() => {\n      hablar(instrucciones[paso]);\n    }, 400);\n  };\n\n  const avanzarPaso = () => {\n    setPasoActual(prevPaso => {\n      const siguiente = Math.min(prevPaso + 1, pasos.length - 1);\n\n      if (pasos[siguiente] === 'registrar') {\n        setPasoActual(siguiente);\n        recognitionRef.current?.abort();\n        hablar(instrucciones.registrar, () => {\n          setTimeout(manejarEnvioFormulario, 1000);\n        }, false);\n      } else {\n        setTimeout(() => iniciarPaso(siguiente), 250);\n      }\n\n      return siguiente;\n    });\n  };\n\n  useEffect(() => {\n    // Verificar si todos los campos están completos y válidos\n    const todosCompletos = (\n      formData.nombre.trim() &&\n      formData.apellido.trim() &&\n      formData.correo.trim() &&\n      formData.password.trim() &&\n      !errores.nombre &&\n      !errores.apellido &&\n      !errores.correo &&\n      !errores.password &&\n      !correoExistente\n    );\n\n    if (todosCompletos && !mensajeEnviado && !cargando) {\n      manejarEnvioFormulario();\n    } // \n  }, [formData, errores, correoExistente, mensajeEnviado, cargando]);\n\n  const reproducirBeep = () => {\n    const context = new (window.AudioContext || window.webkitAudioContext)();\n    const o = context.createOscillator();\n    const g = context.createGain();\n\n    o.type = 'sine';\n    o.frequency.value = 1000;\n\n    o.connect(g);\n    g.connect(context.destination);\n\n    o.start();\n    g.gain.exponentialRampToValueAtTime(0.0001, context.currentTime + 0.1);\n\n    o.stop(context.currentTime + 0.1);\n  };\n\n  let timeoutReconocimiento;\n\n  const iniciarReconocimiento = () => {\n    if (!recognitionRef.current) return;\n    try {\n      recognitionRef.current.abort();\n      resultadoVozRef.current = '';\n      recognitionRef.current.start();\n      setReconocimientoActivo(true);\n\n      const paso = pasos[pasoActualRef.current];\n      const duracion = tiemposPorPaso[paso] || 7000;\n\n      clearTimeout(timeoutReconocimiento);\n      timeoutReconocimiento = setTimeout(() => {\n        recognitionRef.current?.stop();\n        setReconocimientoActivo(false);\n        reproducirBeep();\n      }, duracion);\n\n    } catch (error) {\n      console.error('Error iniciando reconocimiento:', error);\n      hablar('Hubo un error iniciando el micrófono.');\n    }\n  };\n\n  const formatearNombre = (texto) => {\n    return texto\n      .normalize('NFD')\n      .replace(/[\\u0300-\\u036f]/g, '')\n      .replace(/[^a-zA-Z\\s]/g, '')\n      .replace(/\\s+/g, ' ')\n      .trim()\n      .toLowerCase()\n      .replace(/(^\\w{1})|(\\s+\\w{1})/g, l => l.toUpperCase());\n  };\n\n  const manejarResultado = (resultado) => {\n    const paso = pasos[pasoActualRef.current];\n    switch (paso) {\n      case 'nombre':\n      case 'apellido':\n        const valorLimpio = formatearNombre(resultado);\n        if (!valorLimpio) {\n          hablar(`El ${paso} no puede contener símbolos ni quedar vacío. Por favor, di tu ${paso} nuevamente.`, () => iniciarPaso(pasoActualRef.current));\n        } else {\n          setFormData(prev => ({ ...prev, [paso]: valorLimpio }));\n          manejarValidaciones(paso, valorLimpio);\n          avanzarPaso();\n        }\n        break;\n\n      case 'correo': {\n        let correo = resultado\n          .normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')\n          .toLowerCase()\n          .replace(/\\s+/g, '')\n          .replace(/arroba/g, '@')\n          .replace(/punto/g, '.')\n          .replace(/guionbajo|guion bajo/g, '_')\n          .replace(/guion/g, '-');\n\n        const tieneArroba = correo.includes('@');\n        const tienePunto = correo.includes('.');\n        const terminaConDominio = /\\.(com|co|org|edu|net|gov|io|es)$/.test(correo);\n\n        if (tieneArroba && tienePunto && terminaConDominio) {\n          verificarCorreo(correo, (existe) => {\n            if (existe) {\n              setCorreoExistente(true);\n              setErrores(prev => ({ ...prev, correo: \"\" }));\n              hablar('Este correo ya está registrado. Por favor, di un correo diferente.', () => iniciarPaso(pasoActualRef.current));\n            } else {\n              setCorreoExistente(false);\n              setFormData(prev => ({ ...prev, correo }));\n              manejarValidaciones('correo', correo);\n              avanzarPaso();\n            }\n          }, setValidandoCorreo);\n        } else {\n          setErrores(prev => ({ ...prev, correo: \"\" }));\n          setErrores(prev => ({ ...prev, correo: \"Formato de correo inválido\" }));\n          hablar('Ese correo no parece válido. Inténtalo de nuevo.', () => iniciarPaso(pasoActualRef.current));\n        }\n        break;\n      }\n\n      case 'password': {\n        const passwordSinEspacios = resultado.replace(/\\s+/g, '');\n\n        if (passwordSinEspacios.length < 6) {\n          setErrores(prev => ({ ...prev, password: \"Mínimo 6 caracteres\" }));\n          hablar(\n            'La contraseña debe tener al menos 6 caracteres y no debe contener espacios. Por favor, di tu contraseña nuevamente.',\n            () => iniciarPaso(pasoActualRef.current)\n          );\n        } else {\n          setFormData(prev => ({\n            ...prev,\n            password: passwordSinEspacios,\n          }));\n          manejarValidaciones('password', passwordSinEspacios);\n          avanzarPaso();\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  };\n\n  const manejarEnvioFormulario = async () => {\n   // Verificar campos vacíos primero\n  const camposVacios = {\n    nombre: !formData.nombre.trim(),\n    apellido: !formData.apellido.trim(),\n    correo: !formData.correo.trim(),\n    password: !formData.password.trim()\n  };\n\n  // 2. Si hay campos vacíos\n  if (Object.values(camposVacios).some(vacio => vacio)) {\n    // Establecer errores visuales\n    setErrores({\n      nombre: camposVacios.nombre ? \"Este campo es requerido\" : \"\",\n      apellido: camposVacios.apellido ? \"Este campo es requerido\" : \"\",\n      correo: camposVacios.correo ? \"Este campo es requerido\" : \"\",\n      password: camposVacios.password ? \"Este campo es requerido\" : \"\"\n    });\n\n    // Encontrar el primer campo vacío\n    const primerCampoVacio = Object.keys(camposVacios).find(key => camposVacios[key]);\n    \n    if (primerCampoVacio) {\n      // Obtener el índice del paso correspondiente al campo vacío\n      const paso = pasos.indexOf(primerCampoVacio);\n      \n      if (paso !== -1) {\n        // Anular el sistema de pasos actual y enfocar el campo vacío\n        setPasoActual(paso);\n        const ref = referencias[primerCampoVacio];\n        if (ref?.current) ref.current.focus();\n        \n        // Dar instrucciones por voz\n        hablar(`Por favor, completa el campo ${primerCampoVacio} antes de continuar.`, \n          () => iniciarReconocimiento(), false);\n      }\n    }\n    return;\n  }\n\n  // Luego validar el formato de los campos\n  const erroresActuales = {\n    nombre: validarNombre(formData.nombre),\n    apellido: validarNombre(formData.apellido),\n    correo: validarCorreo(formData.correo),\n    password: validarPassword(formData.password)\n  };\n\n  setErrores(erroresActuales);\n\n  const hayErrores = Object.values(erroresActuales).some(error => error !== \"\");\n  if (hayErrores || correoExistente) {\n    if (correoExistente) {\n      hablar('Este correo ya está registrado.', () => iniciarPaso(2));\n    }\n    return;\n  }\n\n  try {\n    setCargando(true);\n    const res = await fetch('http://localhost:4000/api/RegistroDiscapacitados', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(formData)\n    });\n\n    if (res.ok) {\n      setMensajeEnviado(true);\n      hablar('¡Registro exitoso! Serás redirigido al inicio de sesión.', () => navigate('/login'), false);\n    } else {\n      const err = await res.json();\n      hablar(`Error al registrar: ${err.message || 'Intenta más tarde'}`);\n    }\n  } catch (err) {\n    console.error(err);\n    hablar('Ocurrió un error al conectar con el servidor. Intenta más tarde.');\n  } finally {\n    setCargando(false);\n  }\n};\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n    manejarValidaciones(name, value);\n  };\n\n\n\n   const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    \n    // Solo permitir letras y espacios para nombre y apellido\n    if (name === 'nombre' || name === 'apellido') {\n      if (/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]*$/.test(value)) {\n        setFormData(prev => ({ ...prev, [name]: value }));\n        manejarValidaciones(name, value);\n      }\n    } else {\n      setFormData(prev => ({ ...prev, [name]: value }));\n      manejarValidaciones(name, value);\n    }\n  };\n\n  return (\n    <>\n      <BotonesModoOscuroVolver \n        modoOscuro={modoOscuro} \n        setModoOscuro={setModoOscuro} \n        bloquearEventos={bloquearEventos} \n        reconocimientoActivo={reconocimientoActivo}\n      />\n      <div className=\"contenedor-microfono\">\n        <button \n          aria-label=\"Activar micrófono para dictar información\" \n          aria-describedby=\"instruccion-mic\"  \n          onClick={iniciarReconocimiento} \n          disabled={cargando} \n          className={`boton-microfono ${reconocimientoActivo ? 'activo' : ''}`}\n        >\n          <img\n            src={reconocimientoActivo\n              ? \"https://cdn-icons-png.flaticon.com/512/4712/4712035.png\"\n              : \"https://cdn-icons-png.flaticon.com/512/4712/4712109.png\"}\n            alt={reconocimientoActivo ? \"Micrófono activo\" : \"Micrófono inactivo\"}\n            className=\"icono-microfono\"\n            aria-hidden=\"true\"\n          />\n        </button>\n        <span id=\"instruccion-mic\" hidden>\n          Presiona este botón para activar el micrófono. Luego, sigue las instrucciones habladas.\n        </span>\n        {cargando && <div className=\"cargando-voz\">Procesando...</div>}\n      </div>\n\n      <div className=\"registro-container\">\n        <form onSubmit={e => e.preventDefault()}>\n          <h2>Formulario de Registro</h2>\n\n          <label htmlFor=\"nombre\">\n            Nombre\n            {errores.nombre && <span className=\"error-campo\"> * {errores.nombre}</span>}\n          </label>\n          <input \n            ref={nombreRef} \n            type=\"text\" \n            id=\"nombre\" \n            name=\"nombre\"  \n            value={formData.nombre}  \n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              // Bloquear teclas numéricas y especiales\n              if (!/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]$/.test(e.key) && \n                  ![\"Backspace\", \"Delete\", \"ArrowLeft\", \"ArrowRight\", \"Tab\"].includes(e.key)) {\n                e.preventDefault();\n              }\n            }}\n            required\n          />\n\n          <label htmlFor=\"apellido\">\n            Apellido\n            {errores.apellido && <span className=\"error-campo\"> * {errores.apellido}</span>}\n          </label>\n          <input \n            ref={apellidoRef} \n            type=\"text\" \n            id=\"apellido\" \n            name=\"apellido\" \n            value={formData.apellido}\n            onChange={handleInputChange}\n            onKeyDown={(e) => {\n              // Bloquear teclas numéricas y especiales\n              if (!/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]$/.test(e.key) && \n                  ![\"Backspace\", \"Delete\", \"ArrowLeft\", \"ArrowRight\", \"Tab\"].includes(e.key)) {\n                e.preventDefault();\n              }\n            }}\n            required\n          />\n\n          <label htmlFor=\"correo\">\n            Correo electrónico:\n            {errores.correo && <span className=\"error-campo\"> * {errores.correo}</span>}\n            {correoExistente && <span className=\"correo-registrado\"> * Este correo ya está registrado</span>}\n            {validandoCorreo && <span className=\"validando-correo\"></span>}\n          </label>\n          <input \n            ref={correoRef} \n            type=\"email\" \n            id=\"correo\" \n            name=\"correo\" \n            value={formData.correo} \n            onChange={handleChange} \n            required \n          />\n\n          <label htmlFor=\"password\">\n            Contraseña (mínimo 6 caracteres)\n            {errores.password && <span className=\"error-campo\"> * {errores.password}</span>}\n          </label>\n          <input\n            ref={passwordRef}\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n            onKeyDown={(e) => {\n              if (e.key === ' ') {\n                e.preventDefault();\n              }\n            }}\n            required\n          />\n\n          <div className=\"botones-envio\">\n            <button \n              type=\"button\" \n              className=\"btn-enviar\" \n              onClick={manejarEnvioFormulario} \n            >\n              {cargando ? 'Procesando...' : 'Registrarse'}\n            </button>\n            <div className=\"texto-cuenta\">\n              ¿Ya tienes una cuenta?{' '}\n              <button \n                type=\"button\" \n                className=\"btn-iniciar-sesion\" \n                onClick={() => navigate('/login')} \n                disabled={cargando}\n              >\n                Inicia sesión\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default FormularioDiscapacitados;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}