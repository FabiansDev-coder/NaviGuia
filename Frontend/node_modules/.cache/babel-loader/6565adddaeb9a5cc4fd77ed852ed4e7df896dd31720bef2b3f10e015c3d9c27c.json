{"ast":null,"code":"var _jsxFileName = \"E:\\\\Descargas\\\\Nueva carpeta\\\\Proyecto Desarrollo 1\\\\Frontend\\\\src\\\\PaginaRuta.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useCallback } from 'react';\nimport { MapContainer, TileLayer, Marker, Polyline, useMapEvents } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport BotonesModoOscuroPerfil from './components/BotonesRuta';\nimport L from 'leaflet';\nimport axios from 'axios';\nimport './styles/PaginaRuta.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PaginaRuta = ({\n  correoUsuario\n}) => {\n  _s2();\n  var _s = $RefreshSig$(),\n    _instruccionesNavegac;\n  // Estados\n  const [ubicacion, setUbicacion] = useState(null);\n  const [destino, setDestino] = useState(null);\n  const [ruta, setRuta] = useState([]);\n  const [mensajeError, setMensajeError] = useState(\"\");\n  const [paradasBus, setParadasBus] = useState([]);\n  const [seguimientoActivo, setSeguimientoActivo] = useState(false);\n  const [instruccionesNavegacion, setInstruccionesNavegacion] = useState([]);\n  const [pasoActual, setPasoActual] = useState(0);\n  const [distanciaTotal, setDistanciaTotal] = useState(0);\n  const [tiempoEstimado, setTiempoEstimado] = useState(0);\n  const [estadoConfirmacion, setEstadoConfirmacion] = useState(null);\n  // Nuevo estado para el modo oscuro\n  const [modoOscuro, setModoOscuro] = useState(false);\n  const [bloquearEventos, setBloquearEventos] = useState(false);\n  const [reconocimientoActivo, setReconocimientoActivo] = useState(false);\n\n  // Refs\n  const destinoTemporal = useRef(\"\");\n  const temporizadorRef = useRef(null);\n  const intervaloUbicacionRef = useRef(null);\n  const sintesisVozRef = useRef(null);\n  const reiniciarAppRef = useRef(() => {});\n  const recordatorioRef = useRef(null);\n\n  // Constantes\n  const ORS_KEY = process.env.REACT_APP_ORS_KEY;\n  const TLAND_KEY = process.env.REACT_APP_TLAND_KEY;\n\n  // Función para síntesis de voz con control de bloqueo\n  const hablar = useCallback(texto => {\n    // Cancelar cualquier mensaje previo\n    window.speechSynthesis.cancel();\n    setBloquearEventos(true);\n    const mensaje = new SpeechSynthesisUtterance(texto);\n    mensaje.lang = \"es-ES\";\n    mensaje.onend = mensaje.onerror = () => {\n      setBloquearEventos(false);\n    };\n    window.speechSynthesis.speak(mensaje);\n  }, []);\n\n  // Obtener recordatorios\n  const detenerRecordatorio = useCallback(() => {\n    if (recordatorioRef.current) {\n      clearInterval(recordatorioRef.current);\n      recordatorioRef.current = null;\n    }\n  }, []);\n  const iniciarRecordatorio = useCallback(() => {\n    detenerRecordatorio();\n    recordatorioRef.current = setInterval(() => {\n      const mensaje = new SpeechSynthesisUtterance(\"¿Estás buscando una ruta? Presiona el micrófono y dinos tu destino.\");\n      window.speechSynthesis.speak(mensaje);\n    }, 30000); // cada 30 segundos\n  }, [detenerRecordatorio]);\n\n  // Obtener paradas de bus cercanas\n  const obtenerParadasDeBus = useCallback(async ([lat, lon]) => {\n    try {\n      const response = await axios.get(`https://transit.land/api/v2/rest/stops`, {\n        params: {\n          lat,\n          lon,\n          r: 300\n        },\n        headers: {\n          Authorization: `apikey ${TLAND_KEY}`\n        }\n      });\n      setParadasBus(response.data.stops || []);\n    } catch (error) {\n      console.error(\"Error obteniendo paradas:\", error);\n    }\n  }, [TLAND_KEY]);\n\n  // Obtener nueva ruta para redibujar al moverse\n  const obtenerRutaORS = useCallback(async (origen, destinoCoords) => {\n    try {\n      const response = await axios.post(`https://api.openrouteservice.org/v2/directions/foot-walking/geojson`, {\n        coordinates: [[origen[1], origen[0]], [destinoCoords[1], destinoCoords[0]]]\n      }, {\n        headers: {\n          Authorization: ORS_KEY,\n          'Content-Type': 'application/json'\n        }\n      });\n      return response.data.features[0].geometry.coordinates.map(([lng, lat]) => [lat, lng]);\n    } catch (error) {\n      console.error(\"Error obteniendo ruta ORS:\", error);\n      return [];\n    }\n  }, [ORS_KEY]);\n\n  // Seguimiento periódico de ubicación\n  const iniciarSeguimientoUbicacion = useCallback(() => {\n    if (intervaloUbicacionRef.current) clearInterval(intervaloUbicacionRef.current);\n    intervaloUbicacionRef.current = setInterval(() => {\n      navigator.geolocation.getCurrentPosition(async pos => {\n        const coords = [pos.coords.latitude, pos.coords.longitude];\n        setUbicacion(coords);\n        if (destino && seguimientoActivo) {\n          const nuevaRuta = await obtenerRutaORS(coords, destino);\n          setRuta(nuevaRuta);\n        }\n      }, err => console.error(err));\n    }, 5000);\n  }, [destino, seguimientoActivo, obtenerRutaORS]);\n\n  // Navegación por voz\n  const iniciarNavegacionPorVoz = useCallback(instrucciones => {\n    if (!('speechSynthesis' in window)) {\n      alert(\"Tu navegador no soporta guía por voz.\");\n      return;\n    }\n    if (sintesisVozRef.current) {\n      window.speechSynthesis.cancel();\n    }\n    let paso = 0;\n    const hablarInstruccion = () => {\n      if (paso >= instrucciones.length) {\n        const mensajeLlegada = new SpeechSynthesisUtterance(`Has llegado a tu destino. Recorrido total: ${Math.round(distanciaTotal)} metros.`);\n        mensajeLlegada.onend = reiniciarAppRef.current;\n        window.speechSynthesis.speak(mensajeLlegada);\n        return;\n      }\n      const actual = instrucciones[paso];\n      const mensaje = new SpeechSynthesisUtterance(`${actual.instruccion}. Distancia: ${Math.round(actual.distancia)} metros.`);\n      sintesisVozRef.current = mensaje;\n      window.speechSynthesis.speak(mensaje);\n      mensaje.onend = () => {\n        paso++;\n        setPasoActual(paso);\n        setTimeout(hablarInstruccion, 3000);\n      };\n    };\n    hablarInstruccion();\n  }, [distanciaTotal]);\n\n  // Calcular ruta + guardar + voz + seguimiento\n  const calcularRutaYComienzarNavegacion = useCallback(async (origen, destinoCoords) => {\n    try {\n      const response = await axios.post(`https://api.openrouteservice.org/v2/directions/foot-walking/json`, {\n        coordinates: [[origen[1], origen[0]], [destinoCoords[1], destinoCoords[0]]],\n        instructions: true\n      }, {\n        headers: {\n          Authorization: ORS_KEY,\n          'Content-Type': 'application/json'\n        }\n      });\n      const route = response.data.routes[0];\n      const coords = route.geometry.coordinates.map(([lng, lat]) => [lat, lng]);\n      setRuta(coords);\n      const pasos = route.segments[0].steps.map(step => ({\n        distancia: step.distance,\n        duracion: step.duration,\n        instruccion: step.instruction\n      }));\n      setInstruccionesNavegacion(pasos);\n      setDistanciaTotal(route.summary.distance);\n      setTiempoEstimado(route.summary.duration);\n      iniciarNavegacionPorVoz(pasos);\n      setSeguimientoActivo(true);\n      iniciarSeguimientoUbicacion();\n      await axios.post('http://localhost:4000/api/guardarRuta', {\n        usuarioCorreo: correoUsuario,\n        origen: {\n          lat: origen[0],\n          lng: origen[1]\n        },\n        destino: {\n          lat: destinoCoords[0],\n          lng: destinoCoords[1]\n        },\n        distancia: route.summary.distance,\n        duracion: route.summary.duration\n      });\n    } catch (error) {\n      setMensajeError(\"No se pudo calcular la ruta.\");\n    }\n  }, [ORS_KEY, correoUsuario, iniciarNavegacionPorVoz, iniciarSeguimientoUbicacion]);\n\n  // Confirmar destino con búsqueda fuzzy\n  const confirmarDestino = useCallback(async nombreLugar => {\n    if (!ubicacion) {\n      setMensajeError(\"Ubicación no disponible.\");\n      return;\n    }\n    try {\n      const resp = await axios.get(`https://api.openrouteservice.org/geocode/search`, {\n        params: {\n          api_key: ORS_KEY,\n          text: nombreLugar,\n          'boundary.country': 'CO',\n          size: 5\n        }\n      });\n      const features = resp.data.features;\n      if (features.length === 0) {\n        setMensajeError(\"No se encontró ese destino.\");\n        return;\n      }\n      const mejor = features.reduce((mej, actual) => {\n        const [lon, lat] = actual.geometry.coordinates;\n        const d = Math.hypot(lat - ubicacion[0], lon - ubicacion[1]);\n        return !mej || d < mej.distancia ? {\n          coords: [lat, lon],\n          distancia: d\n        } : mej;\n      }, null);\n      if (mejor) {\n        setDestino(mejor.coords);\n        calcularRutaYComienzarNavegacion(ubicacion, mejor.coords);\n      }\n    } catch (error) {\n      console.error(error);\n      setMensajeError(\"No se pudo encontrar la ubicación del destino.\");\n    }\n  }, [ORS_KEY, ubicacion, calcularRutaYComienzarNavegacion]);\n\n  // Iniciar reconocimiento de voz\n  const iniciarReconocimiento = useCallback(() => {\n    if (bloquearEventos) return;\n    setReconocimientoActivo(true);\n    setBloquearEventos(true);\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      hablar(\"Tu navegador no soporta reconocimiento de voz\");\n      setReconocimientoActivo(false);\n      setBloquearEventos(false);\n      return;\n    }\n    const reconocimiento = new SpeechRecognition();\n    reconocimiento.lang = 'es-ES';\n    reconocimiento.interimResults = false;\n    reconocimiento.maxAlternatives = 1;\n    reconocimiento.onresult = event => {\n      const texto = event.results[0][0].transcript.toLowerCase();\n      destinoTemporal.current = texto;\n      setEstadoConfirmacion('esperando');\n      hablar(`¿Confirmas el destino ${texto}? Da dos toques para confirmar, o uno para cancelar.`);\n    };\n    reconocimiento.onerror = () => {\n      setMensajeError(\"No se entendió. Intenta de nuevo.\");\n      setReconocimientoActivo(false);\n      setBloquearEventos(false);\n    };\n    reconocimiento.onend = () => {\n      setReconocimientoActivo(false);\n      setBloquearEventos(false);\n    };\n    reconocimiento.start();\n  }, [bloquearEventos, hablar]);\n\n  // Función para reiniciar la aplicación\n  const reiniciarApp = useCallback(() => {\n    setDestino(null);\n    setRuta([]);\n    setInstruccionesNavegacion([]);\n    setPasoActual(0);\n    setDistanciaTotal(0);\n    setTiempoEstimado(0);\n    setSeguimientoActivo(false);\n    setEstadoConfirmacion(null);\n    destinoTemporal.current = \"\";\n    iniciarReconocimiento();\n  }, [iniciarReconocimiento]);\n\n  // Asignar función a la ref\n  reiniciarAppRef.current = reiniciarApp;\n\n  // Manejar doble toque para confirmación\n  const manejarToquesConfirmacion = useCallback(() => {\n    let toques = 0;\n    const tiempoEspera = 1000;\n    const handler = () => {\n      if (bloquearEventos) return;\n      toques++;\n      clearTimeout(temporizadorRef.current);\n      temporizadorRef.current = setTimeout(() => {\n        if (toques === 2) {\n          confirmarDestino(destinoTemporal.current);\n          setEstadoConfirmacion('confirmado');\n          hablar(`Destino confirmado. Iniciando la ruta hacia ${destinoTemporal.current}.`);\n        } else {\n          setEstadoConfirmacion('cancelado');\n          hablar(\"Has cancelado el destino. Presiona el micrófono nuevamente para ingresar un destino nuevo.\");\n        }\n        toques = 0;\n      }, tiempoEspera);\n    };\n    document.addEventListener('touchstart', handler);\n    return () => document.removeEventListener('touchstart', handler);\n  }, [bloquearEventos, confirmarDestino, hablar]);\n\n  // Click en mapa manual\n  const ClickMapa = () => {\n    _s();\n    useMapEvents({\n      click(e) {\n        setDestino([e.latlng.lat, e.latlng.lng]);\n        setMensajeError(\"\");\n      }\n    });\n    return null;\n  };\n\n  // Efectos\n  _s(ClickMapa, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n    return [useMapEvents];\n  });\n  useEffect(() => {\n    iniciarReconocimiento();\n  }, [iniciarReconocimiento]);\n  useEffect(() => {\n    if (estadoConfirmacion === 'esperando') {\n      const cleanup = manejarToquesConfirmacion();\n      return cleanup;\n    }\n  }, [estadoConfirmacion, manejarToquesConfirmacion]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(async pos => {\n      const coords = [pos.coords.latitude, pos.coords.longitude];\n      setUbicacion(coords);\n      await obtenerParadasDeBus(coords);\n      hablar(\"¡Inicia la navegación! Presiona el micrófono de la parte inferior para dar por voz tu destino\");\n    }, () => hablar(\"No se pudo obtener tu ubicación\"));\n    return () => {\n      clearInterval(intervaloUbicacionRef.current);\n      detenerRecordatorio();\n      window.speechSynthesis.cancel();\n    };\n  }, [obtenerParadasDeBus, detenerRecordatorio, hablar]);\n\n  // Render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `pagina-ruta-wrapper ${modoOscuro ? 'modo-oscuro' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-ruta\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-ruta\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"IR DESDE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: \"Tu ubicaci\\xF3n\",\n          disabled: true,\n          \"aria-label\": \"En la parte superior se encuentran los campos de ubicacion. Tu campo de origen que es tu ubicaci\\xF3n actual y el campo de destino que ser\\xE1 llenado autom\\xE1ticamente tras dictar por microfono..\",\n          tabIndex: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-ruta\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"DESTINO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: destinoTemporal.current || \"\",\n          placeholder: \"Presiona el micr\\xF3fono e indica el destino\",\n          readOnly: true,\n          \"aria-label\": \"En la parte superior se encuentran los campos de ubicacion. Tu campo de origen que es tu ubicaci\\xF3n actual y el campo de destino que ser\\xE1 llenado autom\\xE1ticamente tras dictar por microfono..\",\n          tabIndex: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mapa-contenedor\",\n      children: [/*#__PURE__*/_jsxDEV(BotonesModoOscuroPerfil, {\n        modoOscuro: modoOscuro,\n        setModoOscuro: setModoOscuro,\n        bloquearEventos: bloquearEventos,\n        reconocimientoActivo: reconocimientoActivo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"titulo-ruta\",\n        tabIndex: \"0\",\n        onFocus: () => hablar(\"Mapa de ruta\"),\n        children: \"Mapa de Ruta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mapa-wrapper\",\n        children: ubicacion && /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: ubicacion,\n          zoom: 15,\n          className: \"mapa-container\",\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ClickMapa, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            position: ubicacion,\n            icon: L.icon({\n              iconUrl: 'https://cdn-icons-png.flaticon.com/512/64/64113.png',\n              iconSize: [30, 30]\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 15\n          }, this), destino && /*#__PURE__*/_jsxDEV(Marker, {\n            position: destino\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 27\n          }, this), ruta.length > 0 && /*#__PURE__*/_jsxDEV(Polyline, {\n            positions: ruta,\n            color: \"blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 35\n          }, this), paradasBus.map((stop, i) => /*#__PURE__*/_jsxDEV(Marker, {\n            position: [stop.geometry.coordinates[1], stop.geometry.coordinates[0]],\n            icon: L.icon({\n              iconUrl: 'https://cdn-icons-png.flaticon.com/512/2250/2250399.png',\n              iconSize: [20, 20]\n            })\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-navegacion\",\n        children: instruccionesNavegacion.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instruccion-actual\",\n            children: ((_instruccionesNavegac = instruccionesNavegacion[pasoActual]) === null || _instruccionesNavegac === void 0 ? void 0 : _instruccionesNavegac.instruccion) || \"Preparando ruta...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metricas-navegacion\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metrica\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metrica-valor\",\n                children: [Math.round(distanciaTotal), \" m\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metrica-label\",\n                children: \"Distancia\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 109\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metrica\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metrica-valor\",\n                children: [Math.round(tiempoEstimado / 60), \" min\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metrica-label\",\n                children: \"Tiempo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 116\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metrica\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metrica-valor\",\n                children: [pasoActual + 1, \"/\", instruccionesNavegacion.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metrica-label\",\n                children: \"Pasos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 128\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 452,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"boton-parar\",\n            onClick: reiniciarApp,\n            children: \"Detener navegaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contenedor-microfono\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          \"aria-label\": \"Activar micr\\xF3fono para decir el destino o pedir ayuda\",\n          \"aria-describedby\": \"instruccion-mic\",\n          onClick: iniciarReconocimiento,\n          className: \"boton-microfono\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://cdn-icons-png.flaticon.com/512/4712/4712109.png\",\n            alt: \"\\xCDcono de micr\\xF3fono\",\n            className: \"icono-microfono\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"instruccion-mic\",\n          hidden: true,\n          children: \"Presiona este bot\\xF3n para activar el micr\\xF3fono. Luego, di tu destino o la palabra \\\"ayuda\\\" para recibir instrucciones.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 466,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), mensajeError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mensaje-error\",\n        role: \"alert\",\n        \"aria-live\": \"assertive\",\n        children: mensajeError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 11\n      }, this), estadoConfirmacion === 'esperando' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmacion-overlay\",\n        role: \"alert\",\n        \"aria-live\": \"assertive\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\xBFDestino \\\"\", destinoTemporal.current, \"\\\"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Da dos toques para confirmar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 14\n          }, this), \" o uno para cancelar.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 9\n      }, this), estadoConfirmacion === 'confirmado' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmacion-exito\",\n        role: \"alert\",\n        \"aria-live\": \"assertive\",\n        children: \"Destino confirmado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 11\n      }, this), estadoConfirmacion === 'cancelado' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmacion-cancelado\",\n        role: \"alert\",\n        \"aria-live\": \"assertive\",\n        children: \"Destino cancelado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 385,\n    columnNumber: 5\n  }, this);\n};\n_s2(PaginaRuta, \"j7QJb8ttMlEufc6vgEW0Zm4ksVI=\");\n_c = PaginaRuta;\nexport default PaginaRuta;\nvar _c;\n$RefreshReg$(_c, \"PaginaRuta\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","MapContainer","TileLayer","Marker","Polyline","useMapEvents","BotonesModoOscuroPerfil","L","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","PaginaRuta","correoUsuario","_s2","_s","$RefreshSig$","_instruccionesNavegac","ubicacion","setUbicacion","destino","setDestino","ruta","setRuta","mensajeError","setMensajeError","paradasBus","setParadasBus","seguimientoActivo","setSeguimientoActivo","instruccionesNavegacion","setInstruccionesNavegacion","pasoActual","setPasoActual","distanciaTotal","setDistanciaTotal","tiempoEstimado","setTiempoEstimado","estadoConfirmacion","setEstadoConfirmacion","modoOscuro","setModoOscuro","bloquearEventos","setBloquearEventos","reconocimientoActivo","setReconocimientoActivo","destinoTemporal","temporizadorRef","intervaloUbicacionRef","sintesisVozRef","reiniciarAppRef","recordatorioRef","ORS_KEY","process","env","REACT_APP_ORS_KEY","TLAND_KEY","REACT_APP_TLAND_KEY","hablar","texto","window","speechSynthesis","cancel","mensaje","SpeechSynthesisUtterance","lang","onend","onerror","speak","detenerRecordatorio","current","clearInterval","iniciarRecordatorio","setInterval","obtenerParadasDeBus","lat","lon","response","get","params","r","headers","Authorization","data","stops","error","console","obtenerRutaORS","origen","destinoCoords","post","coordinates","features","geometry","map","lng","iniciarSeguimientoUbicacion","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","nuevaRuta","err","iniciarNavegacionPorVoz","instrucciones","alert","paso","hablarInstruccion","length","mensajeLlegada","Math","round","actual","instruccion","distancia","setTimeout","calcularRutaYComienzarNavegacion","instructions","route","routes","pasos","segments","steps","step","distance","duracion","duration","instruction","summary","usuarioCorreo","confirmarDestino","nombreLugar","resp","api_key","text","size","mejor","reduce","mej","d","hypot","iniciarReconocimiento","SpeechRecognition","webkitSpeechRecognition","reconocimiento","interimResults","maxAlternatives","onresult","event","results","transcript","toLowerCase","start","reiniciarApp","manejarToquesConfirmacion","toques","tiempoEspera","handler","clearTimeout","document","addEventListener","removeEventListener","ClickMapa","click","e","latlng","cleanup","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","disabled","tabIndex","placeholder","readOnly","onFocus","center","zoom","url","position","icon","iconUrl","iconSize","positions","color","stop","i","onClick","src","alt","id","hidden","role","_c","$RefreshReg$"],"sources":["E:/Descargas/Nueva carpeta/Proyecto Desarrollo 1/Frontend/src/PaginaRuta.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Polyline, useMapEvents } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport BotonesModoOscuroPerfil from './components/BotonesRuta';\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport './styles/PaginaRuta.css';\r\n\r\nconst PaginaRuta = ({ correoUsuario }) => {\r\n  // Estados\r\n  const [ubicacion, setUbicacion] = useState(null);\r\n  const [destino, setDestino] = useState(null);\r\n  const [ruta, setRuta] = useState([]);\r\n  const [mensajeError, setMensajeError] = useState(\"\");\r\n  const [paradasBus, setParadasBus] = useState([]);\r\n  const [seguimientoActivo, setSeguimientoActivo] = useState(false);\r\n  const [instruccionesNavegacion, setInstruccionesNavegacion] = useState([]);\r\n  const [pasoActual, setPasoActual] = useState(0);\r\n  const [distanciaTotal, setDistanciaTotal] = useState(0);\r\n  const [tiempoEstimado, setTiempoEstimado] = useState(0);\r\n  const [estadoConfirmacion, setEstadoConfirmacion] = useState(null);\r\n  // Nuevo estado para el modo oscuro\r\n  const [modoOscuro, setModoOscuro] = useState(false);\r\n  const [bloquearEventos, setBloquearEventos] = useState(false);\r\n  const [reconocimientoActivo, setReconocimientoActivo] = useState(false);\r\n\r\n  // Refs\r\n  const destinoTemporal = useRef(\"\");\r\n  const temporizadorRef = useRef(null);\r\n  const intervaloUbicacionRef = useRef(null);\r\n  const sintesisVozRef = useRef(null);\r\n  const reiniciarAppRef = useRef(() => {});\r\n  const recordatorioRef = useRef(null);\r\n\r\n  // Constantes\r\n  const ORS_KEY = process.env.REACT_APP_ORS_KEY;\r\n  const TLAND_KEY = process.env.REACT_APP_TLAND_KEY;\r\n\r\n  // Función para síntesis de voz con control de bloqueo\r\n  const hablar = useCallback((texto) => {\r\n    // Cancelar cualquier mensaje previo\r\n    window.speechSynthesis.cancel();\r\n    \r\n    setBloquearEventos(true);\r\n    const mensaje = new SpeechSynthesisUtterance(texto);\r\n    mensaje.lang = \"es-ES\";\r\n    \r\n    mensaje.onend = mensaje.onerror = () => {\r\n      setBloquearEventos(false);\r\n    };\r\n    \r\n    window.speechSynthesis.speak(mensaje);\r\n  }, []);\r\n\r\n  // Obtener recordatorios\r\n  const detenerRecordatorio = useCallback(() => {\r\n    if (recordatorioRef.current) {\r\n      clearInterval(recordatorioRef.current);\r\n      recordatorioRef.current = null;\r\n    }\r\n  }, []);\r\n\r\n  const iniciarRecordatorio = useCallback(() => {\r\n    detenerRecordatorio();\r\n    recordatorioRef.current = setInterval(() => {\r\n      const mensaje = new SpeechSynthesisUtterance(\r\n        \"¿Estás buscando una ruta? Presiona el micrófono y dinos tu destino.\"\r\n      );\r\n      window.speechSynthesis.speak(mensaje);\r\n    }, 30000); // cada 30 segundos\r\n  }, [detenerRecordatorio]);\r\n  \r\n  // Obtener paradas de bus cercanas\r\n  const obtenerParadasDeBus = useCallback(async ([lat, lon]) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://transit.land/api/v2/rest/stops`,\r\n        {\r\n          params: { lat, lon, r: 300 },\r\n          headers: { Authorization: `apikey ${TLAND_KEY}` }\r\n        }\r\n      );\r\n      setParadasBus(response.data.stops || []);\r\n    } catch (error) {\r\n      console.error(\"Error obteniendo paradas:\", error);\r\n    }\r\n  }, [TLAND_KEY]);\r\n\r\n  // Obtener nueva ruta para redibujar al moverse\r\n  const obtenerRutaORS = useCallback(async (origen, destinoCoords) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `https://api.openrouteservice.org/v2/directions/foot-walking/geojson`,\r\n        {\r\n          coordinates: [[origen[1], origen[0]], [destinoCoords[1], destinoCoords[0]]]\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: ORS_KEY,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }\r\n      );\r\n      return response.data.features[0].geometry.coordinates.map(([lng, lat]) => [lat, lng]);\r\n    } catch (error) {\r\n      console.error(\"Error obteniendo ruta ORS:\", error);\r\n      return [];\r\n    }\r\n  }, [ORS_KEY]);\r\n\r\n  // Seguimiento periódico de ubicación\r\n  const iniciarSeguimientoUbicacion = useCallback(() => {\r\n    if (intervaloUbicacionRef.current) clearInterval(intervaloUbicacionRef.current);\r\n    intervaloUbicacionRef.current = setInterval(() => {\r\n      navigator.geolocation.getCurrentPosition(\r\n        async pos => {\r\n          const coords = [pos.coords.latitude, pos.coords.longitude];\r\n          setUbicacion(coords);\r\n          if (destino && seguimientoActivo) {\r\n            const nuevaRuta = await obtenerRutaORS(coords, destino);\r\n            setRuta(nuevaRuta);\r\n          }\r\n        },\r\n        err => console.error(err)\r\n      );\r\n    }, 5000);\r\n  }, [destino, seguimientoActivo, obtenerRutaORS]);\r\n\r\n  // Navegación por voz\r\n  const iniciarNavegacionPorVoz = useCallback((instrucciones) => {\r\n  if (!('speechSynthesis' in window)) {\r\n    alert(\"Tu navegador no soporta guía por voz.\");\r\n    return;\r\n  }\r\n\r\n  if (sintesisVozRef.current) {\r\n    window.speechSynthesis.cancel();\r\n  }\r\n\r\n  let paso = 0;\r\n  const hablarInstruccion = () => {\r\n    if (paso >= instrucciones.length) {\r\n      const mensajeLlegada = new SpeechSynthesisUtterance(\r\n        `Has llegado a tu destino. Recorrido total: ${Math.round(distanciaTotal)} metros.`\r\n      );\r\n      mensajeLlegada.onend = reiniciarAppRef.current;\r\n      window.speechSynthesis.speak(mensajeLlegada);\r\n      return;\r\n    }\r\n    const actual = instrucciones[paso];\r\n    const mensaje = new SpeechSynthesisUtterance(\r\n      `${actual.instruccion}. Distancia: ${Math.round(actual.distancia)} metros.`\r\n    );\r\n    sintesisVozRef.current = mensaje;\r\n    window.speechSynthesis.speak(mensaje);\r\n    mensaje.onend = () => {\r\n      paso++;\r\n      setPasoActual(paso);\r\n      setTimeout(hablarInstruccion, 3000);\r\n    };\r\n  };\r\n  hablarInstruccion();\r\n}, [distanciaTotal]);\r\n\r\n  // Calcular ruta + guardar + voz + seguimiento\r\n  const calcularRutaYComienzarNavegacion = useCallback(async (origen, destinoCoords) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `https://api.openrouteservice.org/v2/directions/foot-walking/json`,\r\n        {\r\n          coordinates: [[origen[1], origen[0]], [destinoCoords[1], destinoCoords[0]]],\r\n          instructions: true\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: ORS_KEY,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }\r\n      );\r\n\r\n      const route = response.data.routes[0];\r\n      const coords = route.geometry.coordinates.map(([lng, lat]) => [lat, lng]);\r\n      setRuta(coords);\r\n\r\n      const pasos = route.segments[0].steps.map(step => ({\r\n        distancia: step.distance,\r\n        duracion: step.duration,\r\n        instruccion: step.instruction\r\n      }));\r\n      setInstruccionesNavegacion(pasos);\r\n      setDistanciaTotal(route.summary.distance);\r\n      setTiempoEstimado(route.summary.duration);\r\n\r\n      iniciarNavegacionPorVoz(pasos);\r\n      setSeguimientoActivo(true);\r\n      iniciarSeguimientoUbicacion();\r\n\r\n      await axios.post('http://localhost:4000/api/guardarRuta', {\r\n        usuarioCorreo: correoUsuario,\r\n        origen: { lat: origen[0], lng: origen[1] },\r\n        destino: { lat: destinoCoords[0], lng: destinoCoords[1] },\r\n        distancia: route.summary.distance,\r\n        duracion: route.summary.duration\r\n      });\r\n    } catch (error) {\r\n      setMensajeError(\"No se pudo calcular la ruta.\");\r\n    }\r\n  }, [ORS_KEY, correoUsuario, iniciarNavegacionPorVoz, iniciarSeguimientoUbicacion]);\r\n\r\n  // Confirmar destino con búsqueda fuzzy\r\n  const confirmarDestino = useCallback(async (nombreLugar) => {\r\n    if (!ubicacion) {\r\n      setMensajeError(\"Ubicación no disponible.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const resp = await axios.get(\r\n        `https://api.openrouteservice.org/geocode/search`,\r\n        {\r\n          params: {\r\n            api_key: ORS_KEY,\r\n            text: nombreLugar,\r\n            'boundary.country': 'CO',\r\n            size: 5\r\n          }\r\n        }\r\n      );\r\n\r\n      const features = resp.data.features;\r\n      if (features.length === 0) {\r\n        setMensajeError(\"No se encontró ese destino.\");\r\n        return;\r\n      }\r\n\r\n      const mejor = features.reduce((mej, actual) => {\r\n        const [lon, lat] = actual.geometry.coordinates;\r\n        const d = Math.hypot(lat - ubicacion[0], lon - ubicacion[1]);\r\n        return !mej || d < mej.distancia\r\n          ? { coords: [lat, lon], distancia: d }\r\n          : mej;\r\n      }, null);\r\n\r\n      if (mejor) {\r\n        setDestino(mejor.coords);\r\n        calcularRutaYComienzarNavegacion(ubicacion, mejor.coords);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMensajeError(\"No se pudo encontrar la ubicación del destino.\");\r\n    }\r\n  }, [ORS_KEY, ubicacion, calcularRutaYComienzarNavegacion]);\r\n\r\n  // Iniciar reconocimiento de voz\r\n  const iniciarReconocimiento = useCallback(() => {\r\n    if (bloquearEventos) return;\r\n    \r\n    setReconocimientoActivo(true);\r\n    setBloquearEventos(true);\r\n    \r\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n    if (!SpeechRecognition) {\r\n      hablar(\"Tu navegador no soporta reconocimiento de voz\");\r\n      setReconocimientoActivo(false);\r\n      setBloquearEventos(false);\r\n      return;\r\n    }\r\n\r\n    const reconocimiento = new SpeechRecognition();\r\n    reconocimiento.lang = 'es-ES';\r\n    reconocimiento.interimResults = false;\r\n    reconocimiento.maxAlternatives = 1;\r\n    \r\n    reconocimiento.onresult = (event) => {\r\n      const texto = event.results[0][0].transcript.toLowerCase();\r\n      destinoTemporal.current = texto;\r\n      setEstadoConfirmacion('esperando');\r\n      hablar(`¿Confirmas el destino ${texto}? Da dos toques para confirmar, o uno para cancelar.`);\r\n    };\r\n\r\n    reconocimiento.onerror = () => {\r\n      setMensajeError(\"No se entendió. Intenta de nuevo.\");\r\n      setReconocimientoActivo(false);\r\n      setBloquearEventos(false);\r\n    };\r\n\r\n    reconocimiento.onend = () => {\r\n      setReconocimientoActivo(false);\r\n      setBloquearEventos(false);\r\n    };\r\n\r\n    reconocimiento.start();\r\n  }, [bloquearEventos, hablar]);\r\n\r\n  // Función para reiniciar la aplicación\r\n  const reiniciarApp = useCallback(() => {\r\n  setDestino(null);\r\n  setRuta([]);\r\n  setInstruccionesNavegacion([]);\r\n  setPasoActual(0);\r\n  setDistanciaTotal(0);\r\n  setTiempoEstimado(0);\r\n  setSeguimientoActivo(false);\r\n  setEstadoConfirmacion(null);\r\n  destinoTemporal.current = \"\";\r\n  iniciarReconocimiento();\r\n}, [iniciarReconocimiento]);\r\n\r\n// Asignar función a la ref\r\nreiniciarAppRef.current = reiniciarApp;\r\n\r\n\r\n  // Manejar doble toque para confirmación\r\n const manejarToquesConfirmacion = useCallback(() => {\r\n  let toques = 0;\r\n  const tiempoEspera = 1000;\r\n\r\n  const handler = () => {\r\n    if (bloquearEventos) return;\r\n    \r\n    toques++;\r\n    clearTimeout(temporizadorRef.current);\r\n    temporizadorRef.current = setTimeout(() => {\r\n      if (toques === 2) {\r\n        confirmarDestino(destinoTemporal.current);\r\n        setEstadoConfirmacion('confirmado');\r\n        hablar(`Destino confirmado. Iniciando la ruta hacia ${destinoTemporal.current}.`);\r\n      } else {\r\n        setEstadoConfirmacion('cancelado');\r\n        hablar(\"Has cancelado el destino. Presiona el micrófono nuevamente para ingresar un destino nuevo.\");\r\n      }\r\n      toques = 0;\r\n    }, tiempoEspera);\r\n  };\r\n\r\n  document.addEventListener('touchstart', handler);\r\n  return () => document.removeEventListener('touchstart', handler);\r\n}, [bloquearEventos, confirmarDestino, hablar]);\r\n\r\n  // Click en mapa manual\r\n  const ClickMapa = () => {\r\n    useMapEvents({\r\n      click(e) {\r\n        setDestino([e.latlng.lat, e.latlng.lng]);\r\n        setMensajeError(\"\");\r\n      }\r\n    });\r\n    return null;\r\n  };\r\n\r\n  // Efectos\r\n  useEffect(() => {\r\n    iniciarReconocimiento();\r\n  }, [iniciarReconocimiento]);\r\n\r\n  useEffect(() => {\r\n    if (estadoConfirmacion === 'esperando') {\r\n      const cleanup = manejarToquesConfirmacion();\r\n      return cleanup;\r\n    }\r\n  }, [estadoConfirmacion, manejarToquesConfirmacion]);\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      async pos => {\r\n        const coords = [pos.coords.latitude, pos.coords.longitude];\r\n        setUbicacion(coords);\r\n        await obtenerParadasDeBus(coords);\r\n\r\n        hablar(\"¡Inicia la navegación! Presiona el micrófono de la parte inferior para dar por voz tu destino\");\r\n      },\r\n      () => hablar(\"No se pudo obtener tu ubicación\")\r\n    );\r\n\r\n    return () => {\r\n      clearInterval(intervaloUbicacionRef.current);\r\n      detenerRecordatorio();\r\n      window.speechSynthesis.cancel();\r\n    };\r\n  }, [obtenerParadasDeBus, detenerRecordatorio, hablar]);\r\n\r\n  // Render\r\n  return (\r\n    <div className={`pagina-ruta-wrapper ${modoOscuro ? 'modo-oscuro' : ''}`}>\r\n      <div className=\"menu-ruta\">\r\n        <div className=\"campo-ruta\">\r\n          <label>IR DESDE</label>\r\n          <input\r\n            type=\"text\"\r\n            value=\"Tu ubicación\"\r\n            disabled\r\n            aria-label=\"En la parte superior se encuentran los campos de ubicacion. Tu campo de origen que es tu ubicación actual y el campo de destino que será llenado automáticamente tras dictar por microfono..\"\r\n            tabIndex=\"0\"\r\n          />\r\n        </div>\r\n        <div className=\"campo-ruta\">\r\n          <label>DESTINO</label>\r\n          <input\r\n            type=\"text\"\r\n            value={destinoTemporal.current || \"\"}\r\n            placeholder=\"Presiona el micrófono e indica el destino\"\r\n            readOnly\r\n            aria-label=\"En la parte superior se encuentran los campos de ubicacion. Tu campo de origen que es tu ubicación actual y el campo de destino que será llenado automáticamente tras dictar por microfono..\"\r\n            tabIndex=\"0\"\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"mapa-contenedor\">\r\n        <BotonesModoOscuroPerfil \r\n          modoOscuro={modoOscuro}\r\n          setModoOscuro={setModoOscuro}\r\n          bloquearEventos={bloquearEventos}\r\n          reconocimientoActivo={reconocimientoActivo}\r\n        />\r\n        \r\n        <h1 \r\n          className=\"titulo-ruta\" \r\n          tabIndex=\"0\"\r\n          onFocus={() => hablar(\"Mapa de ruta\")}\r\n        >\r\n          Mapa de Ruta\r\n        </h1>\r\n        <div className=\"mapa-wrapper\">\r\n          {ubicacion && (\r\n            <MapContainer center={ubicacion} zoom={15} className=\"mapa-container\">\r\n              <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n              <ClickMapa />\r\n              <Marker position={ubicacion} icon={L.icon({ iconUrl: 'https://cdn-icons-png.flaticon.com/512/64/64113.png', iconSize: [30, 30] })} />\r\n              {destino && <Marker position={destino} />}\r\n              {ruta.length > 0 && <Polyline positions={ruta} color=\"blue\" />}\r\n              {paradasBus.map((stop, i) => (\r\n                <Marker key={i} position={[stop.geometry.coordinates[1], stop.geometry.coordinates[0]]} icon={L.icon({\r\n                  iconUrl: 'https://cdn-icons-png.flaticon.com/512/2250/2250399.png',\r\n                  iconSize: [20, 20]\r\n                })} />\r\n              ))}\r\n            </MapContainer>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"panel-navegacion\">\r\n          {instruccionesNavegacion.length > 0 && (\r\n            <>\r\n              <div className=\"instruccion-actual\">\r\n                {instruccionesNavegacion[pasoActual]?.instruccion || \"Preparando ruta...\"}\r\n              </div>\r\n              <div className=\"metricas-navegacion\">\r\n                <div className=\"metrica\"><div className=\"metrica-valor\">{Math.round(distanciaTotal)} m</div><div className=\"metrica-label\">Distancia</div></div>\r\n                <div className=\"metrica\"><div className=\"metrica-valor\">{Math.round(tiempoEstimado / 60)} min</div><div className=\"metrica-label\">Tiempo</div></div>\r\n                <div className=\"metrica\"><div className=\"metrica-valor\">{pasoActual + 1}/{instruccionesNavegacion.length}</div><div className=\"metrica-label\">Pasos</div></div>\r\n              </div>\r\n              <button className=\"boton-parar\" onClick={reiniciarApp}>Detener navegación</button>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"contenedor-microfono\">\r\n          <button aria-label=\"Activar micrófono para decir el destino o pedir ayuda\"\r\n                  aria-describedby=\"instruccion-mic\"\r\n                  onClick={iniciarReconocimiento}\r\n                  className=\"boton-microfono\">\r\n            <img src=\"https://cdn-icons-png.flaticon.com/512/4712/4712109.png\" alt=\"Ícono de micrófono\"  className=\"icono-microfono\" aria-hidden=\"true\" />\r\n          </button>\r\n          <span id=\"instruccion-mic\" hidden>\r\n            Presiona este botón para activar el micrófono. Luego, di tu destino o la palabra \"ayuda\" para recibir instrucciones.\r\n          </span>\r\n        </div>\r\n\r\n        {mensajeError && (\r\n          <div className=\"mensaje-error\" role=\"alert\" aria-live=\"assertive\">\r\n            {mensajeError}\r\n          </div>\r\n        )}\r\n        {estadoConfirmacion === 'esperando' && (\r\n        <div className=\"confirmacion-overlay\" role=\"alert\" aria-live=\"assertive\">\r\n          <p>¿Destino \"{destinoTemporal.current}\"?</p>\r\n          <p><strong>Da dos toques para confirmar</strong> o uno para cancelar.</p>\r\n        </div>\r\n        )}\r\n        {estadoConfirmacion === 'confirmado' && (\r\n          <div className=\"confirmacion-exito\" role=\"alert\" aria-live=\"assertive\">\r\n            Destino confirmado\r\n          </div>\r\n        )}\r\n        {estadoConfirmacion === 'cancelado' && (\r\n          <div className=\"confirmacion-cancelado\" role=\"alert\" aria-live=\"assertive\">\r\n            Destino cancelado\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginaRuta;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}