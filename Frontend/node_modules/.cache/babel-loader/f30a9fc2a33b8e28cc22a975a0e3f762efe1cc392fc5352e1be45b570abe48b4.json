{"ast":null,"code":"var _jsxFileName = \"E:\\\\Descargas\\\\Nueva carpeta\\\\Proyecto Desarrollo 1\\\\Frontend\\\\src\\\\formularios\\\\RegistroConductores.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BotonesModoOscuroVolver from '../components/BotonesModoOscuroVolver';\nimport { verificarCorreo } from '../utils/verificarCorreo';\nimport '../styles/light.css';\nimport '../stylesdark/dark.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FormularioConductores() {\n  _s();\n  const [formData, setFormData] = useState({\n    nombreCompleto: \"\",\n    documento: \"\",\n    licenciaArchivo: null,\n    placa: \"\",\n    tipoVehiculo: \"\",\n    soat: \"\",\n    revision: \"\",\n    telefono: \"\",\n    correo: \"\",\n    zona: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    horarios: [] // Agrega esta línea\n  });\n  const [errores, setErrores] = useState({\n    nombreCompleto: \"\",\n    documento: \"\",\n    licenciaArchivo: \"\",\n    placa: \"\",\n    telefono: \"\",\n    soat: \"\",\n    correo: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const [modoOscuro, setModoOscuro] = useState(false);\n  const [setMensajeEnviado] = useState(false);\n  const [errorRevision, setErrorRevision] = useState(\"\");\n  const [correoExistente, setCorreoExistente] = useState(false);\n  const [validandoCorreo, setValidandoCorreo] = useState(false);\n  const [fechaMin, setFechaMin] = useState('');\n  const [fechaMax, setFechaMax] = useState('');\n  const passwordRef = useRef(null);\n  const navigate = useNavigate();\n  const validarFormulario = () => {\n    const nuevosErrores = {\n      nombreCompleto: validarNombre(formData.nombreCompleto),\n      documento: validarDocumento(formData.documento),\n      licenciaArchivo: validarLicencia(formData.licenciaArchivo),\n      placa: validarPlaca(formData.placa),\n      telefono: validarTelefono(formData.telefono),\n      soat: validarSOAT(formData.soat),\n      correo: validarCorreo(formData.correo),\n      password: validarPassword(formData.password),\n      confirmPassword: validarConfirmPassword(formData.confirmPassword),\n      tipoVehiculo: validarTipoVehiculo(formData.tipoVehiculo),\n      zona: validarZona(formData.zona),\n      horarios: formData.horarios.length === 0 ? \"Debes seleccionar al menos un horario\" : \"\"\n    };\n    setErrores(nuevosErrores);\n\n    // Verificar si hay algún error\n    return !Object.values(nuevosErrores).some(error => error !== \"\");\n  };\n\n  // Validaciones\n  const validarNombre = nombre => {\n    if (!nombre.trim()) return \"Este campo es requerido\";\n    if (!/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$/.test(nombre)) {\n      return \"Solo se permiten letras y espacios\";\n    }\n    return \"\";\n  };\n  const validarDocumento = doc => {\n    if (!doc.trim()) return \"Este campo es requerido\";\n    if (!/^\\d+$/.test(doc)) return \"Solo se permiten números (sin espacios ni símbolos)\";\n    if (doc.length < 6 || doc.length > 15) return \"Debe tener entre 6 y 15 dígitos\";\n    return \"\";\n  };\n  const validarLicencia = archivo => {\n    if (!archivo) return \"Este campo es requerido\";\n\n    // Verificar si el archivo tiene la propiedad type (puede no estar presente en algunos navegadores)\n    if (archivo.type) {\n      const tiposPermitidos = ['application/pdf', 'image/jpeg', 'image/png'];\n      if (!tiposPermitidos.includes(archivo.type)) {\n        return \"Solo se permiten archivos PDF, JPG o PNG\";\n      }\n    } else {\n      // Validación alternativa para navegadores que no soportan file.type\n      const extension = archivo.name.split('.').pop().toLowerCase();\n      if (!['pdf', 'jpg', 'jpeg', 'png'].includes(extension)) {\n        return \"Solo se permiten archivos PDF, JPG o PNG\";\n      }\n    }\n    const tamanoMaximo = 5 * 1024 * 1024; // 5MB\n    if (archivo.size > tamanoMaximo) {\n      return \"El archivo no debe exceder los 5MB\";\n    }\n    return \"\";\n  };\n  const validarPlaca = placa => {\n    if (!placa.trim()) return \"Este campo es requerido\";\n    if (!/^[a-zA-Z]{2,4}\\d{2,4}$/.test(placa)) {\n      return \"Formato inválido (ej: ABC123)\";\n    }\n    return \"\";\n  };\n  const validarTelefono = tel => {\n    if (!tel.trim()) return \"Este campo es requerido\";\n    if (!/^\\d+$/.test(tel)) return \"Solo se permiten números\";\n    if (tel.length !== 10) return \"Debe tener exactamente 10 dígitos\";\n    return \"\";\n  };\n  const validarSOAT = soat => {\n    if (!soat.trim()) return \"Este campo es requerido\";\n    if (!/^[a-zA-Z0-9]{10,20}$/.test(soat)) {\n      return \"Formato inválido (10-20 caracteres alfanuméricos)\";\n    }\n    return \"\";\n  };\n  const validarTipoVehiculo = tipo => {\n    if (!tipo.trim()) return \"Este campo es requerido\";\n    return \"\";\n  };\n  const validarZona = zona => {\n    if (!zona.trim()) return \"Este campo es requerido\";\n    return \"\";\n  };\n  const validarCorreo = correo => {\n    if (!correo) return \"Este campo es requerido\";\n    if (!correo.includes(\"@\")) {\n      return \"El correo debe contener al menos un @\";\n    }\n    const regexCorreo = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/;\n    if (!regexCorreo.test(correo)) {\n      return \"Debe terminar en .com, .co, etc.\";\n    }\n    return \"\";\n  };\n  const validarPassword = pass => {\n    if (!pass) return \"Este campo es requerido\";\n    if (/\\s/.test(pass)) {\n      return \"No se permiten espacios\";\n    }\n    if (pass.length < 6) {\n      return \"Mínimo 6 caracteres\";\n    }\n    return \"\";\n  };\n  const validarConfirmPassword = useCallback(confirmPass => {\n    if (!confirmPass) return \"Este campo es requerido\";\n    if (confirmPass !== formData.password) {\n      return \"Las contraseñas no coinciden\";\n    }\n    return \"\";\n  }, [formData.password]);\n  useEffect(() => {\n    if (formData.confirmPassword) {\n      const error = validarConfirmPassword(formData.confirmPassword);\n      setErrores(prev => ({\n        ...prev,\n        confirmPassword: error\n      }));\n    }\n  }, [formData.confirmPassword, validarConfirmPassword]);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      verificarCorreo(formData.correo, setCorreoExistente, setValidandoCorreo);\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [formData.correo]);\n  useEffect(() => {\n    document.body.classList.toggle('dark', modoOscuro);\n    const hoy = new Date();\n    const manana = new Date();\n    manana.setDate(hoy.getDate() + 1);\n    const haceUnAno = new Date();\n    haceUnAno.setFullYear(hoy.getFullYear() - 1);\n    const formato = fecha => fecha.toISOString().split('T')[0];\n    const min = formato(haceUnAno);\n    const max = formato(manana);\n    setFechaMin(min);\n    setFechaMax(max);\n    setFormData(prevData => ({\n      ...prevData,\n      revision: max\n    }));\n  }, [modoOscuro]);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n    let nuevoValor;\n    let error = \"\";\n    if (files) {\n      nuevoValor = files[0];\n      // Validación específica para el archivo de licencia\n      if (name === \"licenciaArchivo\") {\n        error = validarLicencia(nuevoValor);\n      }\n    } else {\n      // Solo nombre y zona permiten espacios internos\n      if (name === \"nombreCompleto\" || name === \"zona\") {\n        nuevoValor = value; // sin trim()\n      } else {\n        nuevoValor = value.replace(/\\s/g, \"\"); // quita todos los espacios\n      }\n\n      // Validaciones para otros campos\n      switch (name) {\n        case \"nombreCompleto\":\n          error = validarNombre(nuevoValor);\n          break;\n        case \"documento\":\n          error = validarDocumento(nuevoValor);\n          break;\n        case \"placa\":\n          error = validarPlaca(nuevoValor.toUpperCase());\n          break;\n        case \"telefono\":\n          error = validarTelefono(nuevoValor);\n          break;\n        case \"soat\":\n          error = validarSOAT(nuevoValor);\n          break;\n        case \"correo\":\n          error = validarCorreo(nuevoValor);\n          break;\n        case \"password\":\n          error = validarPassword(nuevoValor);\n          break;\n        case \"confirmPassword\":\n          error = validarConfirmPassword(nuevoValor);\n          break;\n        case \"zona\":\n          error = validarZona(nuevoValor);\n          break;\n        default:\n          break;\n      }\n    }\n    setFormData({\n      ...formData,\n      [name]: nuevoValor\n    });\n    setErrores({\n      ...errores,\n      [name]: error\n    });\n  };\n  const manejarEnvioFormulario = async () => {\n    // Validar todos los campos primero\n    const formularioValido = validarFormulario();\n    if (!formularioValido) {\n      // No continuar si hay errores\n      return;\n    }\n    if (correoExistente) {\n      alert('Este correo ya está registrado. Por favor usa otro.');\n      return;\n    }\n    const fechaRevision = new Date(formData.revision);\n    const fechaMinDate = new Date(fechaMin);\n    const fechaMaxDate = new Date(fechaMax);\n    if (fechaRevision < fechaMinDate || fechaRevision > fechaMaxDate) {\n      setErrorRevision(`La fecha debe estar entre ${fechaMin} y ${fechaMax}.`);\n      return;\n    } else {\n      setErrorRevision(\"\");\n    }\n    const data = new FormData();\n    for (let key in formData) {\n      if (key === 'horarios') {\n        // Para el array de horarios, agregamos cada valor por separado\n        formData.horarios.forEach(horario => {\n          data.append('horarios[]', horario);\n        });\n      } else {\n        data.append(key, formData[key]);\n      }\n    }\n    try {\n      const response = await fetch('http://localhost:4000/api/RegistroConductores', {\n        method: 'POST',\n        body: data\n      });\n      if (response.ok) {\n        setMensajeEnviado(true);\n        setTimeout(() => {\n          setMensajeEnviado(false);\n          setFormData({\n            nombreCompleto: \"\",\n            documento: \"\",\n            licenciaArchivo: null,\n            placa: \"\",\n            tipoVehiculo: \"\",\n            soat: \"\",\n            revision: \"\",\n            telefono: \"\",\n            correo: \"\",\n            zona: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            horarios: []\n          });\n          navigate('/login');\n        }, 1000);\n      } else {\n        alert(\"Error al registrar conductor.\");\n      }\n    } catch (err) {\n      console.error(\"Error en la conexión:\", err);\n      alert(\"Error en la conexión con el servidor.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BotonesModoOscuroVolver, {\n      modoOscuro: modoOscuro,\n      setModoOscuro: setModoOscuro\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registro-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Formulario de Registro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Nombre completo \", errores.nombreCompleto && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-campo\",\n            children: [\"* \", errores.nombreCompleto]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"nombreCompleto\",\n          value: formData.nombreCompleto,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Documento de identidad \", errores.documento && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-campo\",\n            children: [\"* \", errores.documento]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 63\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"documento\",\n          value: formData.documento,\n          onChange: e => {\n            // Filtra solo números en el cambio\n            const soloNumeros = e.target.value.replace(/\\D/g, '');\n            handleChange({\n              target: {\n                name: e.target.name,\n                value: soloNumeros\n              }\n            });\n          },\n          onKeyDown: e => {\n            if (!/[0-9]/.test(e.key) && ![\"Backspace\", \"Delete\", \"ArrowLeft\", \"ArrowRight\", \"Tab\", \"Home\", \"End\"].includes(e.key)) {\n              e.preventDefault();\n            }\n          },\n          onPaste: e => {\n            e.preventDefault();\n            const textoPegado = e.clipboardData.getData('text/plain').replace(/\\D/g, '');\n            if (textoPegado) {\n              const nuevoValor = (formData.documento + textoPegado).slice(0, 15); // Asegura no pasar el maxLength\n              setFormData(prev => ({\n                ...prev,\n                documento: nuevoValor\n              }));\n            }\n          },\n          inputMode: \"numeric\",\n          pattern: \"[0-9]*\",\n          maxLength: 15,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Adjuntar licencia de conducci\\xF3n\", errores.licenciaArchivo && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-campo\",\n            children: [\"* \", errores.licenciaArchivo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 43\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"licenciaArchivo\",\n          accept: \".pdf,.jpg,.jpeg,.png\",\n          onChange: handleChange,\n          required: true,\n          className: errores.licenciaArchivo ? 'input-error' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this), formData.licenciaArchivo && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"file-info\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" Tu archivo pesa: \", (formData.licenciaArchivo.size / 1024 / 1024).toFixed(2), \" MB\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"instrucciones-archivo\",\n          children: \"Formatos aceptados: PDF, JPG, PNG (m\\xE1x. 5MB)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"N\\xFAmero de placa del veh\\xEDculo \", errores.placa && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-campo\",\n            children: [\"* \", errores.placa]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 65\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"placa\",\n          value: formData.placa.toUpperCase(),\n          onChange: handleChange,\n          onKeyDown: e => {\n            if (!/[a-zA-Z0-9]/.test(e.key) && ![\"Backspace\", \"Delete\", \"ArrowLeft\", \"ArrowRight\", \"Tab\"].includes(e.key)) {\n              e.preventDefault();\n            }\n          },\n          maxLength: 7,\n          required: true,\n          placeholder: \"ABC123\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Tipo de veh\\xEDculo \", errores.tipoVehiculo && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-campo\",\n            children: [\"* \", errores.tipoVehiculo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 60\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"tipoVehiculo\",\n          value: formData.tipoVehiculo,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Seguro obligatorio (SOAT) \", errores.soat && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-campo\",\n            children: [\"* \", errores.soat]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"soat\",\n          value: formData.soat,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\xDAltima fecha de revisi\\xF3n t\\xE9cnico-mec\\xE1nica\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"revision\",\n          value: formData.revision,\n          onChange: handleChange,\n          required: true,\n          min: fechaMin,\n          max: fechaMax\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 11\n        }, this), errorRevision && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mensaje-error\",\n          children: errorRevision\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Tel\\xE9fono \", errores.telefono && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-campo\",\n            children: [\"* \", errores.telefono]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"tel\",\n          name: \"telefono\",\n          value: formData.telefono,\n          onChange: handleChange,\n          onKeyDown: e => {\n            if (!/[0-9]/.test(e.key) && ![\"Backspace\", \"Delete\", \"ArrowLeft\", \"ArrowRight\", \"Tab\"].includes(e.key)) {\n              e.preventDefault();\n            }\n          },\n          maxLength: 10,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"correo\",\n          children: [\"Correo electr\\xF3nico:\", errores.correo && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-campo\",\n            children: [\" * \", errores.correo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 32\n          }, this), correoExistente && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"correo-registrado\",\n            children: \" * Este correo ya est\\xE1 registrado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 492,\n            columnNumber: 33\n          }, this), validandoCorreo && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"validando-correo\",\n            children: \" \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"correo\",\n          name: \"correo\",\n          value: formData.correo,\n          onChange: handleChange,\n          onKeyDown: e => {\n            if (e.key === \" \") e.preventDefault(); // bloquea espacio\n          },\n          onPaste: e => {\n            const texto = e.clipboardData.getData(\"text\");\n            if (/\\s/.test(texto)) e.preventDefault(); // bloquea si el texto tiene espacios\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Contrase\\xF1a \", errores.password && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-campo\",\n            children: [\"* \", errores.password]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 511,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 511,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: passwordRef,\n          type: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Confirmar contrase\\xF1a \", errores.confirmPassword && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-campo\",\n            children: [\"* \", errores.confirmPassword]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 67\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"confirmPassword\",\n          value: formData.confirmPassword,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Zona de cobertura \", errores.zona && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-campo\",\n            children: [\"* \", errores.zona]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 53\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"zona\",\n          value: formData.zona,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Horarios disponibles\", errores.horarios && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-campo\",\n            children: [\" * \", errores.horarios]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 540,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox-group\",\n          children: [\"Mañana (6:00 AM - 10:00 AM)\", \"Mediodía (10:00 AM - 2:00 PM)\", \"Tarde (2:00 PM - 6:00 PM)\", \"Noche (6:00 PM - 10:00 PM)\", \"Fines de semana (Sabados y/o Domingos)\", \"Todos los días / todo el dia\"].map(rango => /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"horario-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: rango\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"horarios\",\n              value: rango,\n              checked: formData.horarios.includes(rango),\n              onChange: e => {\n                const nuevoValor = e.target.value;\n                setFormData(prevData => {\n                  const nuevosHorarios = prevData.horarios.includes(nuevoValor) ? prevData.horarios.filter(h => h !== nuevoValor) : [...prevData.horarios, nuevoValor];\n                  return {\n                    ...prevData,\n                    horarios: nuevosHorarios\n                  };\n                });\n                setErrores(prev => ({\n                  ...prev,\n                  horarios: \"\"\n                }));\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 17\n            }, this)]\n          }, rango, true, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"botones-envio\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-enviar\",\n            onClick: manejarEnvioFormulario,\n            children: \"Registrarse\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"texto-cuenta\",\n            children: [\"\\xBFYa tienes una cuenta?\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-iniciar-sesion\",\n              onClick: () => navigate('/login'),\n              children: \"Inicia sesi\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(FormularioConductores, \"YA7DQZV1QYa4GWdqzsGwu3k3EOE=\", false, function () {\n  return [useNavigate];\n});\n_c = FormularioConductores;\nexport default FormularioConductores;\nvar _c;\n$RefreshReg$(_c, \"FormularioConductores\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","useNavigate","BotonesModoOscuroVolver","verificarCorreo","jsxDEV","_jsxDEV","Fragment","_Fragment","FormularioConductores","_s","formData","setFormData","nombreCompleto","documento","licenciaArchivo","placa","tipoVehiculo","soat","revision","telefono","correo","zona","password","confirmPassword","horarios","errores","setErrores","modoOscuro","setModoOscuro","setMensajeEnviado","errorRevision","setErrorRevision","correoExistente","setCorreoExistente","validandoCorreo","setValidandoCorreo","fechaMin","setFechaMin","fechaMax","setFechaMax","passwordRef","navigate","validarFormulario","nuevosErrores","validarNombre","validarDocumento","validarLicencia","validarPlaca","validarTelefono","validarSOAT","validarCorreo","validarPassword","validarConfirmPassword","validarTipoVehiculo","validarZona","length","Object","values","some","error","nombre","trim","test","doc","archivo","type","tiposPermitidos","includes","extension","name","split","pop","toLowerCase","tamanoMaximo","size","tel","tipo","regexCorreo","pass","confirmPass","prev","timer","setTimeout","clearTimeout","document","body","classList","toggle","hoy","Date","manana","setDate","getDate","haceUnAno","setFullYear","getFullYear","formato","fecha","toISOString","min","max","prevData","handleChange","e","value","files","target","nuevoValor","replace","toUpperCase","manejarEnvioFormulario","formularioValido","alert","fechaRevision","fechaMinDate","fechaMaxDate","data","FormData","key","forEach","horario","append","response","fetch","method","ok","err","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","preventDefault","onChange","required","soloNumeros","onKeyDown","onPaste","textoPegado","clipboardData","getData","slice","inputMode","pattern","maxLength","accept","toFixed","placeholder","htmlFor","id","texto","ref","map","rango","checked","nuevosHorarios","filter","h","onClick","_c","$RefreshReg$"],"sources":["E:/Descargas/Nueva carpeta/Proyecto Desarrollo 1/Frontend/src/formularios/RegistroConductores.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BotonesModoOscuroVolver from '../components/BotonesModoOscuroVolver';\nimport { verificarCorreo } from '../utils/verificarCorreo';\nimport '../styles/light.css';\nimport '../stylesdark/dark.css';\n\nfunction FormularioConductores() {\n  const [formData, setFormData] = useState({\n    nombreCompleto: \"\",\n    documento: \"\",\n    licenciaArchivo: null,\n    placa: \"\",\n    tipoVehiculo: \"\",\n    soat: \"\",\n    revision: \"\",\n    telefono: \"\",\n    correo: \"\",\n    zona: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    horarios: [] // Agrega esta línea\n  });\n\n  const [errores, setErrores] = useState({\n    nombreCompleto: \"\",\n    documento: \"\",\n    licenciaArchivo: \"\",\n    placa: \"\",\n    telefono: \"\",\n    soat: \"\",\n    correo: \"\", \n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n\n  const [modoOscuro, setModoOscuro] = useState(false);\n  const [setMensajeEnviado] = useState(false);\n  const [errorRevision, setErrorRevision] = useState(\"\");\n  const [correoExistente, setCorreoExistente] = useState(false);\n  const [validandoCorreo, setValidandoCorreo] = useState(false);\n  const [fechaMin, setFechaMin] = useState('');\n  const [fechaMax, setFechaMax] = useState('');\n  const passwordRef = useRef(null);\n  const navigate = useNavigate();\n\n  \n  const validarFormulario = () => {\n    const nuevosErrores = {\n      nombreCompleto: validarNombre(formData.nombreCompleto),\n      documento: validarDocumento(formData.documento),\n      licenciaArchivo: validarLicencia(formData.licenciaArchivo),\n      placa: validarPlaca(formData.placa),\n      telefono: validarTelefono(formData.telefono),\n      soat: validarSOAT(formData.soat),\n      correo: validarCorreo(formData.correo),\n      password: validarPassword(formData.password),\n      confirmPassword: validarConfirmPassword(formData.confirmPassword),\n      tipoVehiculo: validarTipoVehiculo(formData.tipoVehiculo),\n      zona: validarZona(formData.zona),\n      horarios: formData.horarios.length === 0 ? \"Debes seleccionar al menos un horario\" : \"\"\n    };\n\n    setErrores(nuevosErrores);\n\n    // Verificar si hay algún error\n    return !Object.values(nuevosErrores).some(error => error !== \"\");\n  };\n\n  // Validaciones\n  const validarNombre = (nombre) => {\n    if (!nombre.trim()) return \"Este campo es requerido\";\n    if (!/^[a-zA-ZáéíóúÁÉÍÓÚñÑ\\s]+$/.test(nombre)) {\n      return \"Solo se permiten letras y espacios\";\n    }\n    return \"\";\n  };\n\n  const validarDocumento = (doc) => {\n    if (!doc.trim()) return \"Este campo es requerido\";\n    if (!/^\\d+$/.test(doc)) return \"Solo se permiten números (sin espacios ni símbolos)\";\n    if (doc.length < 6 || doc.length > 15) return \"Debe tener entre 6 y 15 dígitos\";\n    return \"\";\n  };\n\n  const validarLicencia = (archivo) => {\n    if (!archivo) return \"Este campo es requerido\";\n    \n    // Verificar si el archivo tiene la propiedad type (puede no estar presente en algunos navegadores)\n    if (archivo.type) {\n      const tiposPermitidos = ['application/pdf', 'image/jpeg', 'image/png'];\n      if (!tiposPermitidos.includes(archivo.type)) {\n        return \"Solo se permiten archivos PDF, JPG o PNG\";\n      }\n    } else {\n      // Validación alternativa para navegadores que no soportan file.type\n      const extension = archivo.name.split('.').pop().toLowerCase();\n      if (!['pdf', 'jpg', 'jpeg', 'png'].includes(extension)) {\n        return \"Solo se permiten archivos PDF, JPG o PNG\";\n      }\n    }\n    \n    const tamanoMaximo = 5 * 1024 * 1024; // 5MB\n    if (archivo.size > tamanoMaximo) {\n      return \"El archivo no debe exceder los 5MB\";\n    }\n    \n    return \"\";\n  };\n\n  const validarPlaca = (placa) => {\n    if (!placa.trim()) return \"Este campo es requerido\";\n    if (!/^[a-zA-Z]{2,4}\\d{2,4}$/.test(placa)) {\n      return \"Formato inválido (ej: ABC123)\";\n    }\n    return \"\";\n  };\n\n  const validarTelefono = (tel) => {\n    if (!tel.trim()) return \"Este campo es requerido\";\n    if (!/^\\d+$/.test(tel)) return \"Solo se permiten números\";\n    if (tel.length !== 10) return \"Debe tener exactamente 10 dígitos\";\n    return \"\";\n  };\n\n  const validarSOAT = (soat) => {\n    if (!soat.trim()) return \"Este campo es requerido\";\n    if (!/^[a-zA-Z0-9]{10,20}$/.test(soat)) {\n      return \"Formato inválido (10-20 caracteres alfanuméricos)\";\n    }\n    return \"\";\n  };\n\n  const validarTipoVehiculo = (tipo) => {\n    if (!tipo.trim()) return \"Este campo es requerido\";\n    return \"\";\n  };\n\n  const validarZona = (zona) => {\n    if (!zona.trim()) return \"Este campo es requerido\";\n    return \"\";\n  };\n\n  const validarCorreo = (correo) => {\n    if (!correo) return \"Este campo es requerido\";\n\n    if (!correo.includes(\"@\")) {\n      return \"El correo debe contener al menos un @\";\n    }\n\n    const regexCorreo = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/;\n    if (!regexCorreo.test(correo)) {\n      return \"Debe terminar en .com, .co, etc.\";\n    }\n\n    return \"\";\n  };\n\n  const validarPassword = (pass) => {\n    if (!pass) return \"Este campo es requerido\";\n    if (/\\s/.test(pass)) {\n      return \"No se permiten espacios\";\n    }\n    if (pass.length < 6) {\n      return \"Mínimo 6 caracteres\";\n    }\n    return \"\";\n  };\n\n  const validarConfirmPassword = useCallback((confirmPass) => {\n    if (!confirmPass) return \"Este campo es requerido\";\n    if (confirmPass !== formData.password) {\n      return \"Las contraseñas no coinciden\";\n    }\n    return \"\";\n  }, [formData.password]);\n\n  useEffect(() => {\n    if (formData.confirmPassword) {\n      const error = validarConfirmPassword(formData.confirmPassword);\n      setErrores(prev => ({ ...prev, confirmPassword: error }));\n    }\n  }, [formData.confirmPassword, validarConfirmPassword]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      verificarCorreo(formData.correo, setCorreoExistente, setValidandoCorreo);\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [formData.correo]);\n\n  useEffect(() => {\n    document.body.classList.toggle('dark', modoOscuro);\n\n    const hoy = new Date();\n    const manana = new Date();\n    manana.setDate(hoy.getDate() + 1);\n\n    const haceUnAno = new Date();\n    haceUnAno.setFullYear(hoy.getFullYear() - 1);\n\n    const formato = (fecha) => fecha.toISOString().split('T')[0];\n\n    const min = formato(haceUnAno);\n    const max = formato(manana);\n\n    setFechaMin(min);\n    setFechaMax(max);\n\n    setFormData((prevData) => ({\n      ...prevData,\n      revision: max\n    }));\n  }, [modoOscuro]);\n\n  const handleChange = (e) => {\n    const { name, value, files } = e.target;\n\n    let nuevoValor;\n    let error = \"\";\n\n    if (files) {\n      nuevoValor = files[0];\n      // Validación específica para el archivo de licencia\n      if (name === \"licenciaArchivo\") {\n        error = validarLicencia(nuevoValor);\n      }\n    } else {\n      // Solo nombre y zona permiten espacios internos\n      if (name === \"nombreCompleto\" || name === \"zona\") {\n        nuevoValor = value; // sin trim()\n      } else {\n        nuevoValor = value.replace(/\\s/g, \"\"); // quita todos los espacios\n      }\n\n      // Validaciones para otros campos\n      switch (name) {\n        case \"nombreCompleto\":\n          error = validarNombre(nuevoValor);\n          break;\n        case \"documento\":\n          error = validarDocumento(nuevoValor);\n          break;\n        case \"placa\":\n          error = validarPlaca(nuevoValor.toUpperCase());\n          break;\n        case \"telefono\":\n          error = validarTelefono(nuevoValor);\n          break;\n        case \"soat\":\n          error = validarSOAT(nuevoValor);\n          break;\n        case \"correo\":\n          error = validarCorreo(nuevoValor);\n          break;\n        case \"password\":\n          error = validarPassword(nuevoValor);\n          break;\n        case \"confirmPassword\":\n          error = validarConfirmPassword(nuevoValor);\n          break;\n        case \"zona\":\n          error = validarZona(nuevoValor);\n          break;\n        default:\n          break;\n      }\n    }\n\n    setFormData({\n      ...formData,\n      [name]: nuevoValor\n    });\n\n    setErrores({\n      ...errores,\n      [name]: error\n    });\n  };\n\n   const manejarEnvioFormulario = async () => {\n    // Validar todos los campos primero\n    const formularioValido = validarFormulario();\n    \n    if (!formularioValido) {\n      // No continuar si hay errores\n      return;\n    }\n\n    if (correoExistente) {\n      alert('Este correo ya está registrado. Por favor usa otro.');\n      return;\n    }\n\n    const fechaRevision = new Date(formData.revision);\n    const fechaMinDate = new Date(fechaMin);\n    const fechaMaxDate = new Date(fechaMax);\n\n    if (fechaRevision < fechaMinDate || fechaRevision > fechaMaxDate) {\n      setErrorRevision(`La fecha debe estar entre ${fechaMin} y ${fechaMax}.`);\n      return;\n    } else {\n      setErrorRevision(\"\");\n    }\n\n    const data = new FormData();\n    for (let key in formData) {\n      if (key === 'horarios') {\n        // Para el array de horarios, agregamos cada valor por separado\n        formData.horarios.forEach(horario => {\n          data.append('horarios[]', horario);\n        });\n      } else {\n        data.append(key, formData[key]);\n      }\n    }\n\n    try {\n      const response = await fetch('http://localhost:4000/api/RegistroConductores', {\n        method: 'POST',\n        body: data\n      });\n\n      if (response.ok) {\n        setMensajeEnviado(true);\n        setTimeout(() => {\n          setMensajeEnviado(false);\n          setFormData({\n            nombreCompleto: \"\",\n            documento: \"\",\n            licenciaArchivo: null,\n            placa: \"\",\n            tipoVehiculo: \"\",\n            soat: \"\",\n            revision: \"\",\n            telefono: \"\",\n            correo: \"\",\n            zona: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            horarios: [] \n          });\n          navigate('/login');\n        }, 1000);\n      } else {\n        alert(\"Error al registrar conductor.\");\n      }\n    } catch (err) {\n      console.error(\"Error en la conexión:\", err);\n      alert(\"Error en la conexión con el servidor.\");\n    }\n  };\n\n  return (\n    <>\n      <BotonesModoOscuroVolver modoOscuro={modoOscuro} setModoOscuro={setModoOscuro} />\n      <div className=\"registro-container\">\n        <form onSubmit={(e) => e.preventDefault()}>\n          <h2>Formulario de Registro</h2>\n\n          <label>Nombre completo {errores.nombreCompleto && <span className=\"error-campo\">* {errores.nombreCompleto}</span>}</label>\n          <input \n            type=\"text\" \n            name=\"nombreCompleto\" \n            value={formData.nombreCompleto} \n            onChange={handleChange} \n            required \n          />\n\n          <label>Documento de identidad {errores.documento && <span className=\"error-campo\">* {errores.documento}</span>}</label>\n            <input \n              type=\"text\" \n              name=\"documento\" \n              value={formData.documento} \n              onChange={(e) => {\n                // Filtra solo números en el cambio\n                const soloNumeros = e.target.value.replace(/\\D/g, '');\n                handleChange({\n                  target: {\n                    name: e.target.name,\n                    value: soloNumeros\n                  }\n                });\n              }}\n              onKeyDown={(e) => {\n                if (!/[0-9]/.test(e.key) && \n                    ![\"Backspace\", \"Delete\", \"ArrowLeft\", \"ArrowRight\", \"Tab\", \"Home\", \"End\"].includes(e.key)) {\n                  e.preventDefault();\n                }\n              }}\n              onPaste={(e) => {\n                e.preventDefault();\n                const textoPegado = e.clipboardData.getData('text/plain').replace(/\\D/g, '');\n                if (textoPegado) {\n                  const nuevoValor = (formData.documento + textoPegado).slice(0, 15); // Asegura no pasar el maxLength\n                  setFormData(prev => ({\n                    ...prev,\n                    documento: nuevoValor\n                  }));\n                }\n              }}\n              inputMode=\"numeric\"\n              pattern=\"[0-9]*\"\n              maxLength={15}\n              required\n            />\n\n          <label>\n              Adjuntar licencia de conducción \n              {errores.licenciaArchivo && <span className=\"error-campo\">* {errores.licenciaArchivo}</span>}\n            </label>\n            <input \n              type=\"file\" \n              name=\"licenciaArchivo\" \n              accept=\".pdf,.jpg,.jpeg,.png\" \n              onChange={handleChange} \n              required \n              className={errores.licenciaArchivo ? 'input-error' : ''}\n            />\n            {formData.licenciaArchivo && (\n              <div className=\"file-info\">\n                <span> Tu archivo pesa: {(formData.licenciaArchivo.size / 1024 / 1024).toFixed(2)} MB</span>\n              </div>\n            )}\n            <span className=\"instrucciones-archivo\">Formatos aceptados: PDF, JPG, PNG (máx. 5MB)</span>\n\n          <label>Número de placa del vehículo {errores.placa && <span className=\"error-campo\">* {errores.placa}</span>}</label>\n          <input \n          type=\"text\" \n          name=\"placa\" \n          value={formData.placa.toUpperCase()} \n          onChange={handleChange}\n          onKeyDown={(e) => {\n            if (!/[a-zA-Z0-9]/.test(e.key) && ![\"Backspace\", \"Delete\", \"ArrowLeft\", \"ArrowRight\", \"Tab\"].includes(e.key)) {\n              e.preventDefault();\n            }\n          }}\n          maxLength={7}\n          required \n          placeholder=\"ABC123\"\n        />\n\n          <label>Tipo de vehículo {errores.tipoVehiculo && <span className=\"error-campo\">* {errores.tipoVehiculo}</span>}</label>\n          <input \n            type=\"text\" \n            name=\"tipoVehiculo\" \n            value={formData.tipoVehiculo} \n            onChange={handleChange} \n            required \n          />\n\n          <label>Seguro obligatorio (SOAT) {errores.soat && <span className=\"error-campo\">* {errores.soat}</span>}</label>\n          <input \n            type=\"text\" \n            name=\"soat\" \n            value={formData.soat} \n            onChange={handleChange} \n            required \n          />\n\n          <label>Última fecha de revisión técnico-mecánica</label>\n          <input\n            type=\"date\"\n            name=\"revision\"\n            value={formData.revision}\n            onChange={handleChange}\n            required\n            min={fechaMin}\n            max={fechaMax}\n          />\n          {errorRevision && <p className=\"mensaje-error\">{errorRevision}</p>}\n\n          <label>Teléfono {errores.telefono && <span className=\"error-campo\">* {errores.telefono}</span>}</label>\n          <input \n            type=\"tel\" \n            name=\"telefono\" \n            value={formData.telefono} \n            onChange={handleChange}\n            onKeyDown={(e) => {\n              if (!/[0-9]/.test(e.key) && ![\"Backspace\", \"Delete\", \"ArrowLeft\", \"ArrowRight\", \"Tab\"].includes(e.key)) {\n                e.preventDefault();\n              }\n            }}\n            maxLength={10}\n            required \n          />\n\n          <label htmlFor=\"correo\">\n            Correo electrónico:\n            {errores.correo && <span className=\"error-campo\"> * {errores.correo}</span>}\n            {correoExistente && <span className=\"correo-registrado\"> * Este correo ya está registrado</span>}\n            {validandoCorreo && <span className=\"validando-correo\"> </span>}\n          </label>\n         <input \n            type=\"email\" \n            id=\"correo\" \n            name=\"correo\" \n            value={formData.correo} \n            onChange={handleChange} \n            onKeyDown={(e) => {\n              if (e.key === \" \") e.preventDefault(); // bloquea espacio\n            }}\n            onPaste={(e) => {\n              const texto = e.clipboardData.getData(\"text\");\n              if (/\\s/.test(texto)) e.preventDefault(); // bloquea si el texto tiene espacios\n            }}\n            required \n          />\n\n          <label>Contraseña {errores.password && <span className=\"error-campo\">* {errores.password}</span>}</label>\n          <input \n            ref={passwordRef} \n            type=\"password\" \n            name=\"password\" \n            value={formData.password} \n            onChange={handleChange} \n            required \n          />\n\n          <label>Confirmar contraseña {errores.confirmPassword && <span className=\"error-campo\">* {errores.confirmPassword}</span>}</label>\n          <input \n            type=\"password\" \n            name=\"confirmPassword\" \n            value={formData.confirmPassword} \n            onChange={handleChange} \n            required \n          />\n\n          <label>Zona de cobertura {errores.zona && <span className=\"error-campo\">* {errores.zona}</span>}</label>\n          <input \n            type=\"text\" \n            name=\"zona\" \n            value={formData.zona} \n            onChange={handleChange} \n            required \n          />\n          <label>\n            Horarios disponibles\n            {errores.horarios && <span className=\"error-campo\"> * {errores.horarios}</span>}\n          </label>\n          <div className=\"checkbox-group\">\n            {[\n              \"Mañana (6:00 AM - 10:00 AM)\",\n              \"Mediodía (10:00 AM - 2:00 PM)\",\n              \"Tarde (2:00 PM - 6:00 PM)\",\n              \"Noche (6:00 PM - 10:00 PM)\",\n              \"Fines de semana (Sabados y/o Domingos)\",\n              \"Todos los días / todo el dia\"\n            ].map((rango) => (\n              <label key={rango} className=\"horario-label\">\n                <span>{rango}</span>\n                <input\n                  type=\"checkbox\"\n                  name=\"horarios\"\n                  value={rango}\n                  checked={formData.horarios.includes(rango)}\n                  onChange={(e) => {\n                    const nuevoValor = e.target.value;\n                    setFormData((prevData) => {\n                      const nuevosHorarios = prevData.horarios.includes(nuevoValor)\n                        ? prevData.horarios.filter(h => h !== nuevoValor)\n                        : [...prevData.horarios, nuevoValor];\n                      return { ...prevData, horarios: nuevosHorarios };\n                    });\n                    setErrores((prev) => ({\n                      ...prev,\n                      horarios: \"\"\n                    }));\n                  }}\n                />\n              </label>\n            ))}\n          </div>\n          <div className=\"botones-envio\">\n            <button \n              type=\"button\" \n              className=\"btn-enviar\" \n              onClick={manejarEnvioFormulario}\n            >\n              Registrarse\n            </button>\n            <div className=\"texto-cuenta\">\n              ¿Ya tienes una cuenta?{' '}\n              <button type=\"button\" className=\"btn-iniciar-sesion\" onClick={() => navigate('/login')}>\n                Inicia sesión\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default FormularioConductores;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}