{"ast":null,"code":"var _jsxFileName = \"E:\\\\Descargas\\\\Nueva carpeta\\\\Proyecto Desarrollo 1\\\\Frontend\\\\src\\\\PaginaRuta.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState, useRef, useCallback } from 'react';\nimport { MapContainer, TileLayer, Marker, Polyline, useMapEvents } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport BotonesModoOscuroPerfil from './components/BotonesRuta'; // Ajusta la ruta si es distinta\nimport L from 'leaflet';\nimport axios from 'axios';\nimport './styles/PaginaRuta.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PaginaRuta = ({\n  correoUsuario\n}) => {\n  _s2();\n  var _s = $RefreshSig$(),\n    _instruccionesNavegac;\n  // Estados\n  const [ubicacion, setUbicacion] = useState(null);\n  const [destino, setDestino] = useState(null);\n  const [ruta, setRuta] = useState([]);\n  const [mensajeError, setMensajeError] = useState(\"\");\n  const [paradasBus, setParadasBus] = useState([]);\n  const [seguimientoActivo, setSeguimientoActivo] = useState(false);\n  const [instruccionesNavegacion, setInstruccionesNavegacion] = useState([]);\n  const [pasoActual, setPasoActual] = useState(0);\n  const [distanciaTotal, setDistanciaTotal] = useState(0);\n  const [tiempoEstimado, setTiempoEstimado] = useState(0);\n  const [estadoConfirmacion, setEstadoConfirmacion] = useState(null);\n  const [modoOscuro, setModoOscuro] = useState(false);\n  const [bloquearEventos, setBloquearEventos] = useState(false);\n  const [reconocimientoActivo, setReconocimientoActivo] = useState(false);\n  const [hablando, setHablando] = useState(false);\n\n  // Refs\n  const destinoTemporal = useRef(\"\");\n  const reconocimientoRef = useRef(null);\n  const temporizadorRef = useRef(null);\n  const intervaloUbicacionRef = useRef(null);\n  const sintesisVozRef = useRef(null);\n  const reiniciarAppRef = useRef(() => {});\n  const recordatorioRef = useRef(null);\n\n  // Constantes\n  const ORS_KEY = process.env.REACT_APP_ORS_KEY;\n  const TLAND_KEY = process.env.REACT_APP_TLAND_KEY;\n  const hablar = texto => {\n    if (bloquearEventos || reconocimientoActivo || hablando) return;\n    const mensaje = new SpeechSynthesisUtterance(texto);\n    mensaje.lang = \"es-ES\";\n    setHablando(true);\n    speechSynthesis.cancel();\n    speechSynthesis.speak(mensaje);\n    mensaje.onend = () => setHablando(false);\n    mensaje.onerror = () => setHablando(false);\n  };\n\n  // Obtener recordatorios\n  const detenerRecordatorio = useCallback(() => {\n    if (recordatorioRef.current) {\n      clearInterval(recordatorioRef.current);\n      recordatorioRef.current = null;\n    }\n  }, []);\n  const iniciarRecordatorio = useCallback(() => {\n    detenerRecordatorio();\n    recordatorioRef.current = setInterval(() => {\n      const mensaje = new SpeechSynthesisUtterance(\"¿Estás buscando una ruta? Presiona el micrófono y dinos tu destino.\");\n      window.speechSynthesis.speak(mensaje);\n    }, 30000); // cada 30 segundos\n  }, [detenerRecordatorio]);\n\n  // Obtener paradas de bus cercanas\n  const obtenerParadasDeBus = useCallback(async ([lat, lon]) => {\n    try {\n      const response = await axios.get(`https://transit.land/api/v2/rest/stops`, {\n        params: {\n          lat,\n          lon,\n          r: 300\n        },\n        headers: {\n          Authorization: `apikey ${TLAND_KEY}`\n        }\n      });\n      setParadasBus(response.data.stops || []);\n    } catch (error) {\n      console.error(\"Error obteniendo paradas:\", error);\n    }\n  }, [TLAND_KEY]);\n\n  // Obtener nueva ruta para redibujar al moverse\n  const obtenerRutaORS = useCallback(async (origen, destinoCoords) => {\n    try {\n      const response = await axios.post(`https://api.openrouteservice.org/v2/directions/foot-walking/geojson`, {\n        coordinates: [[origen[1], origen[0]], [destinoCoords[1], destinoCoords[0]]]\n      }, {\n        headers: {\n          Authorization: ORS_KEY,\n          'Content-Type': 'application/json'\n        }\n      });\n      return response.data.features[0].geometry.coordinates.map(([lng, lat]) => [lat, lng]);\n    } catch (error) {\n      console.error(\"Error obteniendo ruta ORS:\", error);\n      return [];\n    }\n  }, [ORS_KEY]);\n\n  // Seguimiento periódico de ubicación\n  const iniciarSeguimientoUbicacion = useCallback(() => {\n    if (intervaloUbicacionRef.current) clearInterval(intervaloUbicacionRef.current);\n    intervaloUbicacionRef.current = setInterval(() => {\n      navigator.geolocation.getCurrentPosition(async pos => {\n        const coords = [pos.coords.latitude, pos.coords.longitude];\n        setUbicacion(coords);\n        if (destino && seguimientoActivo) {\n          const nuevaRuta = await obtenerRutaORS(coords, destino);\n          setRuta(nuevaRuta);\n        }\n      }, err => console.error(err));\n    }, 5000);\n  }, [destino, seguimientoActivo, obtenerRutaORS]);\n\n  // Navegación por voz\n  const iniciarNavegacionPorVoz = useCallback(instrucciones => {\n    if (!('speechSynthesis' in window)) {\n      alert(\"Tu navegador no soporta guía por voz.\");\n      return;\n    }\n    if (sintesisVozRef.current) {\n      window.speechSynthesis.cancel();\n    }\n    let paso = 0;\n    const hablarInstruccion = () => {\n      if (paso >= instrucciones.length) {\n        const mensajeLlegada = new SpeechSynthesisUtterance(`Has llegado a tu destino. Recorrido total: ${Math.round(distanciaTotal)} metros.`);\n        mensajeLlegada.onend = reiniciarAppRef.current;\n        window.speechSynthesis.speak(mensajeLlegada);\n        return;\n      }\n      const actual = instrucciones[paso];\n      const mensaje = new SpeechSynthesisUtterance(`${actual.instruccion}. Distancia: ${Math.round(actual.distancia)} metros.`);\n      sintesisVozRef.current = mensaje;\n      window.speechSynthesis.speak(mensaje);\n      mensaje.onend = () => {\n        paso++;\n        setPasoActual(paso);\n        setTimeout(hablarInstruccion, 3000);\n      };\n    };\n    hablarInstruccion();\n  }, [distanciaTotal]);\n\n  // Calcular ruta + guardar + voz + seguimiento\n  const calcularRutaYComienzarNavegacion = useCallback(async (origen, destinoCoords) => {\n    try {\n      const response = await axios.post(`https://api.openrouteservice.org/v2/directions/foot-walking/json`, {\n        coordinates: [[origen[1], origen[0]], [destinoCoords[1], destinoCoords[0]]],\n        instructions: true\n      }, {\n        headers: {\n          Authorization: ORS_KEY,\n          'Content-Type': 'application/json'\n        }\n      });\n      const route = response.data.routes[0];\n      const coords = route.geometry.coordinates.map(([lng, lat]) => [lat, lng]);\n      setRuta(coords);\n      const pasos = route.segments[0].steps.map(step => ({\n        distancia: step.distance,\n        duracion: step.duration,\n        instruccion: step.instruction\n      }));\n      setInstruccionesNavegacion(pasos);\n      setDistanciaTotal(route.summary.distance);\n      setTiempoEstimado(route.summary.duration);\n      iniciarNavegacionPorVoz(pasos);\n      setSeguimientoActivo(true);\n      iniciarSeguimientoUbicacion();\n      await axios.post('http://localhost:4000/api/guardarRuta', {\n        usuarioCorreo: correoUsuario,\n        origen: {\n          lat: origen[0],\n          lng: origen[1]\n        },\n        destino: {\n          lat: destinoCoords[0],\n          lng: destinoCoords[1]\n        },\n        distancia: route.summary.distance,\n        duracion: route.summary.duration\n      });\n    } catch (error) {\n      setMensajeError(\"No se pudo calcular la ruta.\");\n    }\n  }, [ORS_KEY, correoUsuario, iniciarNavegacionPorVoz, iniciarSeguimientoUbicacion]);\n\n  // Confirmar destino con búsqueda fuzzy\n  const confirmarDestino = useCallback(async nombreLugar => {\n    if (!ubicacion) {\n      setMensajeError(\"Ubicación no disponible.\");\n      return;\n    }\n    try {\n      const resp = await axios.get(`https://api.openrouteservice.org/geocode/search`, {\n        params: {\n          api_key: ORS_KEY,\n          text: nombreLugar,\n          'boundary.country': 'CO',\n          size: 5\n        }\n      });\n      const features = resp.data.features;\n      if (features.length === 0) {\n        setMensajeError(\"No se encontró ese destino.\");\n        return;\n      }\n      const mejor = features.reduce((mej, actual) => {\n        const [lon, lat] = actual.geometry.coordinates;\n        const d = Math.hypot(lat - ubicacion[0], lon - ubicacion[1]);\n        return !mej || d < mej.distancia ? {\n          coords: [lat, lon],\n          distancia: d\n        } : mej;\n      }, null);\n      if (mejor) {\n        setDestino(mejor.coords);\n        calcularRutaYComienzarNavegacion(ubicacion, mejor.coords);\n      }\n    } catch (error) {\n      console.error(error);\n      setMensajeError(\"No se pudo encontrar la ubicación del destino.\");\n    }\n  }, [ORS_KEY, ubicacion, calcularRutaYComienzarNavegacion]);\n\n  // Iniciar reconocimiento de voz\n  const iniciarReconocimiento = useCallback(() => {\n    const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n    if (!SpeechRecognition) {\n      alert(\"Tu navegador no soporta reconocimiento de voz.\");\n      return;\n    }\n    if (temporizadorRef.current) {\n      clearTimeout(temporizadorRef.current);\n    }\n    window.speechSynthesis.cancel();\n    setEstadoConfirmacion(null);\n    setMensajeError(\"\");\n    const reconocimiento = new SpeechRecognition();\n    reconocimiento.lang = 'es-ES';\n    reconocimiento.interimResults = false;\n    reconocimiento.maxAlternatives = 1;\n    reconocimientoRef.current = reconocimiento;\n    setReconocimientoActivo(true);\n    reconocimiento.onresult = event => {\n      const texto = event.results[0][0].transcript.toLowerCase();\n      if (texto.includes(\"ayuda\")) {\n        window.speechSynthesis.cancel();\n        const ayuda = new SpeechSynthesisUtterance(\"Para comenzar, otorga los permisos necesarios para activar el micrófono a través de VoiceOver o TalkBack. Luego presiona el botón del micrófono en la parte inferior de la aplicación y di el nombre del destino. Cuando se escuche el destino, da dos toques para confirmar o uno para cancelar. Si necesitas repetir esta ayuda, di la palabra ayuda de nuevo.\");\n        window.speechSynthesis.speak(ayuda);\n        setReconocimientoActivo(false);\n        return;\n      }\n      destinoTemporal.current = texto;\n      setEstadoConfirmacion('esperando');\n      const mensajeConfirmacion = new SpeechSynthesisUtterance(`¿Confirmas el destino ${texto}? Da dos toques para confirmar, o uno para cancelar.`);\n      window.speechSynthesis.cancel();\n      window.speechSynthesis.speak(mensajeConfirmacion);\n    };\n    reconocimiento.onerror = () => {\n      setMensajeError(\"No se entendió. Intenta de nuevo.\");\n      setReconocimientoActivo(false);\n    };\n    reconocimiento.onend = () => {\n      clearTimeout(temporizadorRef.current);\n      setReconocimientoActivo(false);\n    };\n    reconocimiento.start();\n    temporizadorRef.current = setTimeout(() => reconocimiento.stop(), 6000);\n  }, []);\n\n  // Función para reiniciar la aplicación\n  const reiniciarApp = useCallback(() => {\n    setDestino(null);\n    setRuta([]);\n    setInstruccionesNavegacion([]);\n    setPasoActual(0);\n    setDistanciaTotal(0);\n    setTiempoEstimado(0);\n    setSeguimientoActivo(false);\n    setEstadoConfirmacion(null);\n    destinoTemporal.current = \"\";\n    window.speechSynthesis.cancel();\n    iniciarReconocimiento();\n  }, [iniciarReconocimiento]);\n\n  // Asignar función a la ref\n  reiniciarAppRef.current = reiniciarApp;\n\n  // Manejar doble toque para confirmación\n  const manejarToquesConfirmacion = useCallback(() => {\n    let toques = 0;\n    const tiempoEspera = 1000;\n    const handler = () => {\n      toques++;\n      clearTimeout(temporizadorRef.current);\n      temporizadorRef.current = setTimeout(() => {\n        if (toques === 2) {\n          confirmarDestino(destinoTemporal.current);\n          setEstadoConfirmacion('confirmado');\n          window.speechSynthesis.cancel();\n          const mensajeConfirmado = new SpeechSynthesisUtterance(`Destino confirmado. Iniciando la ruta hacia ${destinoTemporal.current}.`);\n          window.speechSynthesis.speak(mensajeConfirmado);\n          detenerRecordatorio();\n        } else {\n          setDestino(null);\n          destinoTemporal.current = \"\";\n          setEstadoConfirmacion('cancelado');\n          window.speechSynthesis.cancel();\n          const mensajeCancelado = new SpeechSynthesisUtterance(\"Has cancelado el destino. Presiona el micrófono nuevamente para ingresar un destino nuevo.\");\n          window.speechSynthesis.speak(mensajeCancelado);\n          iniciarRecordatorio();\n        }\n        toques = 0;\n      }, tiempoEspera);\n    };\n    document.addEventListener('touchstart', handler);\n    return () => document.removeEventListener('touchstart', handler);\n  }, [confirmarDestino, detenerRecordatorio, iniciarRecordatorio]);\n\n  // Click en mapa manual\n  const ClickMapa = () => {\n    _s();\n    useMapEvents({\n      click(e) {\n        setDestino([e.latlng.lat, e.latlng.lng]);\n        setMensajeError(\"\");\n      }\n    });\n    return null;\n  };\n\n  // Efectos\n  _s(ClickMapa, \"Ld/tk8Iz8AdZhC1l7acENaOEoCo=\", false, function () {\n    return [useMapEvents];\n  });\n  useEffect(() => {\n    if (estadoConfirmacion === 'esperando') {\n      const cleanup = manejarToquesConfirmacion();\n      return cleanup;\n    }\n  }, [estadoConfirmacion, manejarToquesConfirmacion]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(async pos => {\n      const coords = [pos.coords.latitude, pos.coords.longitude];\n      setUbicacion(coords);\n      await obtenerParadasDeBus(coords);\n      const bienvenida = new SpeechSynthesisUtterance(\"¡Inicia la navegacion! presiona el micrófono que está en la parte inferior e ingresa tu destino por voz o di la palabra ayuda para recibir instrucciones\");\n      window.speechSynthesis.speak(bienvenida);\n      iniciarRecordatorio(); // llamada segura\n    }, () => alert(\"No se pudo obtener tu ubicación.\"));\n    return () => {\n      clearInterval(intervaloUbicacionRef.current);\n      detenerRecordatorio(); // limpia al desmontar\n      window.speechSynthesis.cancel();\n    };\n  }, [obtenerParadasDeBus, iniciarRecordatorio, detenerRecordatorio]);\n\n  // Render\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"pagina-ruta-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-ruta\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-ruta\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"IR DESDE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: \"Tu ubicaci\\xF3n\",\n          disabled: true,\n          \"aria-label\": \"En la parte superior se encuentran los campos de ubicacion. Tu campo de origen que es tu ubicaci\\xF3n actual y el campo de destino que ser\\xE1 llenado autom\\xE1ticamente tras dictar por microfono..\",\n          tabIndex: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"campo-ruta\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"DESTINO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: destinoTemporal.current || \"\",\n          placeholder: \"Presiona el micr\\xF3fono e indica el destino\",\n          readOnly: true,\n          \"aria-label\": \"En la parte superior se encuentran los campos de ubicacion. Tu campo de origen que es tu ubicaci\\xF3n actual y el campo de destino que ser\\xE1 llenado autom\\xE1ticamente tras dictar por microfono..\",\n          tabIndex: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mapa-contenedor\",\n      children: [/*#__PURE__*/_jsxDEV(BotonesModoOscuroPerfil, {\n        modoOscuro: modoOscuro,\n        setModoOscuro: setModoOscuro,\n        bloquearEventos: bloquearEventos || hablando,\n        reconocimientoActivo: reconocimientoActivo || hablando\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"titulo-ruta\",\n        children: \"Mapa de Ruta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mapa-wrapper\",\n        children: ubicacion && /*#__PURE__*/_jsxDEV(MapContainer, {\n          center: ubicacion,\n          zoom: 15,\n          className: \"mapa-container\",\n          children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n            url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ClickMapa, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Marker, {\n            position: ubicacion,\n            icon: L.icon({\n              iconUrl: 'https://cdn-icons-png.flaticon.com/512/64/64113.png',\n              iconSize: [30, 30]\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 15\n          }, this), destino && /*#__PURE__*/_jsxDEV(Marker, {\n            position: destino\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 27\n          }, this), ruta.length > 0 && /*#__PURE__*/_jsxDEV(Polyline, {\n            positions: ruta,\n            color: \"blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 35\n          }, this), paradasBus.map((stop, i) => /*#__PURE__*/_jsxDEV(Marker, {\n            position: [stop.geometry.coordinates[1], stop.geometry.coordinates[0]],\n            icon: L.icon({\n              iconUrl: 'https://cdn-icons-png.flaticon.com/512/2250/2250399.png',\n              iconSize: [20, 20]\n            })\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panel-navegacion\",\n        children: instruccionesNavegacion.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"instruccion-actual\",\n            children: ((_instruccionesNavegac = instruccionesNavegacion[pasoActual]) === null || _instruccionesNavegac === void 0 ? void 0 : _instruccionesNavegac.instruccion) || \"Preparando ruta...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metricas-navegacion\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metrica\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metrica-valor\",\n                children: [Math.round(distanciaTotal), \" m\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metrica-label\",\n                children: \"Distancia\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 109\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metrica\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metrica-valor\",\n                children: [Math.round(tiempoEstimado / 60), \" min\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metrica-label\",\n                children: \"Tiempo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 116\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metrica\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metrica-valor\",\n                children: [pasoActual + 1, \"/\", instruccionesNavegacion.length]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 42\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"metrica-label\",\n                children: \"Pasos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 128\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 477,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"boton-parar\",\n            onClick: reiniciarApp,\n            children: \"Detener navegaci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contenedor-microfono\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          \"aria-label\": \"Activar micr\\xF3fono para decir el destino o pedir ayuda\",\n          \"aria-describedby\": \"instruccion-mic\",\n          onClick: iniciarReconocimiento,\n          className: \"boton-microfono\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://cdn-icons-png.flaticon.com/512/4712/4712109.png\",\n            alt: \"\\xCDcono de micr\\xF3fono\",\n            className: \"icono-microfono\",\n            \"aria-hidden\": \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"instruccion-mic\",\n          hidden: true,\n          children: \"Presiona este bot\\xF3n para activar el micr\\xF3fono. Luego, di tu destino o la palabra \\\"ayuda\\\" para recibir instrucciones.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 9\n      }, this), mensajeError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mensaje-error\",\n        role: \"alert\",\n        \"aria-live\": \"assertive\",\n        children: mensajeError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 11\n      }, this), estadoConfirmacion === 'esperando' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmacion-overlay\",\n        role: \"alert\",\n        \"aria-live\": \"assertive\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\xBFDestino \\\"\", destinoTemporal.current, \"\\\"?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Da dos toques para confirmar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 14\n          }, this), \" o uno para cancelar.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 502,\n        columnNumber: 9\n      }, this), estadoConfirmacion === 'confirmado' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmacion-exito\",\n        role: \"alert\",\n        \"aria-live\": \"assertive\",\n        children: \"Destino confirmado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 11\n      }, this), estadoConfirmacion === 'cancelado' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"confirmacion-cancelado\",\n        role: \"alert\",\n        \"aria-live\": \"assertive\",\n        children: \"Destino cancelado\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 417,\n    columnNumber: 5\n  }, this);\n};\n_s2(PaginaRuta, \"b2uQaNmzuzfagpXdzJOrwnAXgHg=\");\n_c = PaginaRuta;\nexport default PaginaRuta;\nvar _c;\n$RefreshReg$(_c, \"PaginaRuta\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useCallback","MapContainer","TileLayer","Marker","Polyline","useMapEvents","BotonesModoOscuroPerfil","L","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","PaginaRuta","correoUsuario","_s2","_s","$RefreshSig$","_instruccionesNavegac","ubicacion","setUbicacion","destino","setDestino","ruta","setRuta","mensajeError","setMensajeError","paradasBus","setParadasBus","seguimientoActivo","setSeguimientoActivo","instruccionesNavegacion","setInstruccionesNavegacion","pasoActual","setPasoActual","distanciaTotal","setDistanciaTotal","tiempoEstimado","setTiempoEstimado","estadoConfirmacion","setEstadoConfirmacion","modoOscuro","setModoOscuro","bloquearEventos","setBloquearEventos","reconocimientoActivo","setReconocimientoActivo","hablando","setHablando","destinoTemporal","reconocimientoRef","temporizadorRef","intervaloUbicacionRef","sintesisVozRef","reiniciarAppRef","recordatorioRef","ORS_KEY","process","env","REACT_APP_ORS_KEY","TLAND_KEY","REACT_APP_TLAND_KEY","hablar","texto","mensaje","SpeechSynthesisUtterance","lang","speechSynthesis","cancel","speak","onend","onerror","detenerRecordatorio","current","clearInterval","iniciarRecordatorio","setInterval","window","obtenerParadasDeBus","lat","lon","response","get","params","r","headers","Authorization","data","stops","error","console","obtenerRutaORS","origen","destinoCoords","post","coordinates","features","geometry","map","lng","iniciarSeguimientoUbicacion","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","nuevaRuta","err","iniciarNavegacionPorVoz","instrucciones","alert","paso","hablarInstruccion","length","mensajeLlegada","Math","round","actual","instruccion","distancia","setTimeout","calcularRutaYComienzarNavegacion","instructions","route","routes","pasos","segments","steps","step","distance","duracion","duration","instruction","summary","usuarioCorreo","confirmarDestino","nombreLugar","resp","api_key","text","size","mejor","reduce","mej","d","hypot","iniciarReconocimiento","SpeechRecognition","webkitSpeechRecognition","clearTimeout","reconocimiento","interimResults","maxAlternatives","onresult","event","results","transcript","toLowerCase","includes","ayuda","mensajeConfirmacion","start","stop","reiniciarApp","manejarToquesConfirmacion","toques","tiempoEspera","handler","mensajeConfirmado","mensajeCancelado","document","addEventListener","removeEventListener","ClickMapa","click","e","latlng","cleanup","bienvenida","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","disabled","tabIndex","placeholder","readOnly","center","zoom","url","position","icon","iconUrl","iconSize","positions","color","i","onClick","src","alt","id","hidden","role","_c","$RefreshReg$"],"sources":["E:/Descargas/Nueva carpeta/Proyecto Desarrollo 1/Frontend/src/PaginaRuta.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from 'react';\r\nimport { MapContainer, TileLayer, Marker, Polyline, useMapEvents } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport BotonesModoOscuroPerfil from './components/BotonesRuta'; // Ajusta la ruta si es distinta\r\nimport L from 'leaflet';\r\nimport axios from 'axios';\r\nimport './styles/PaginaRuta.css';\r\n\r\n\r\nconst PaginaRuta = ({ correoUsuario }) => {\r\n  // Estados\r\n  const [ubicacion, setUbicacion] = useState(null);\r\n  const [destino, setDestino] = useState(null);\r\n  const [ruta, setRuta] = useState([]);\r\n  const [mensajeError, setMensajeError] = useState(\"\");\r\n  const [paradasBus, setParadasBus] = useState([]);\r\n  const [seguimientoActivo, setSeguimientoActivo] = useState(false);\r\n  const [instruccionesNavegacion, setInstruccionesNavegacion] = useState([]);\r\n  const [pasoActual, setPasoActual] = useState(0);\r\n  const [distanciaTotal, setDistanciaTotal] = useState(0);\r\n  const [tiempoEstimado, setTiempoEstimado] = useState(0);\r\n  const [estadoConfirmacion, setEstadoConfirmacion] = useState(null);\r\n  \r\n  const [modoOscuro, setModoOscuro] = useState(false);\r\n  const [bloquearEventos, setBloquearEventos] = useState(false);\r\n  const [reconocimientoActivo, setReconocimientoActivo] = useState(false);\r\n  const [hablando, setHablando] = useState(false);\r\n\r\n  // Refs\r\n  const destinoTemporal = useRef(\"\");\r\n  const reconocimientoRef = useRef(null);\r\n  const temporizadorRef = useRef(null);\r\n  const intervaloUbicacionRef = useRef(null);\r\n  const sintesisVozRef = useRef(null);\r\n  const reiniciarAppRef = useRef(() => {});\r\n  const recordatorioRef = useRef(null);\r\n\r\n  // Constantes\r\n  const ORS_KEY = process.env.REACT_APP_ORS_KEY;\r\n  const TLAND_KEY = process.env.REACT_APP_TLAND_KEY;\r\n\r\n  const hablar = (texto) => {\r\n    if (bloquearEventos || reconocimientoActivo || hablando) return;\r\n    const mensaje = new SpeechSynthesisUtterance(texto);\r\n    mensaje.lang = \"es-ES\";\r\n\r\n    setHablando(true);\r\n    speechSynthesis.cancel();\r\n    speechSynthesis.speak(mensaje);\r\n\r\n    mensaje.onend = () => setHablando(false);\r\n    mensaje.onerror = () => setHablando(false);\r\n  };\r\n\r\n  // Obtener recordatorios\r\n  const detenerRecordatorio = useCallback(() => {\r\n    if (recordatorioRef.current) {\r\n      clearInterval(recordatorioRef.current);\r\n      recordatorioRef.current = null;\r\n    }\r\n  }, []);\r\n\r\n  const iniciarRecordatorio = useCallback(() => {\r\n    detenerRecordatorio();\r\n    recordatorioRef.current = setInterval(() => {\r\n      const mensaje = new SpeechSynthesisUtterance(\r\n        \"¿Estás buscando una ruta? Presiona el micrófono y dinos tu destino.\"\r\n      );\r\n      window.speechSynthesis.speak(mensaje);\r\n    }, 30000); // cada 30 segundos\r\n  }, [detenerRecordatorio]);\r\n  \r\n  // Obtener paradas de bus cercanas\r\n  const obtenerParadasDeBus = useCallback(async ([lat, lon]) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `https://transit.land/api/v2/rest/stops`,\r\n        {\r\n          params: { lat, lon, r: 300 },\r\n          headers: { Authorization: `apikey ${TLAND_KEY}` }\r\n        }\r\n      );\r\n      setParadasBus(response.data.stops || []);\r\n    } catch (error) {\r\n      console.error(\"Error obteniendo paradas:\", error);\r\n    }\r\n  }, [TLAND_KEY]);\r\n\r\n  // Obtener nueva ruta para redibujar al moverse\r\n  const obtenerRutaORS = useCallback(async (origen, destinoCoords) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `https://api.openrouteservice.org/v2/directions/foot-walking/geojson`,\r\n        {\r\n          coordinates: [[origen[1], origen[0]], [destinoCoords[1], destinoCoords[0]]]\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: ORS_KEY,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }\r\n      );\r\n      return response.data.features[0].geometry.coordinates.map(([lng, lat]) => [lat, lng]);\r\n    } catch (error) {\r\n      console.error(\"Error obteniendo ruta ORS:\", error);\r\n      return [];\r\n    }\r\n  }, [ORS_KEY]);\r\n\r\n  // Seguimiento periódico de ubicación\r\n  const iniciarSeguimientoUbicacion = useCallback(() => {\r\n    if (intervaloUbicacionRef.current) clearInterval(intervaloUbicacionRef.current);\r\n    intervaloUbicacionRef.current = setInterval(() => {\r\n      navigator.geolocation.getCurrentPosition(\r\n        async pos => {\r\n          const coords = [pos.coords.latitude, pos.coords.longitude];\r\n          setUbicacion(coords);\r\n          if (destino && seguimientoActivo) {\r\n            const nuevaRuta = await obtenerRutaORS(coords, destino);\r\n            setRuta(nuevaRuta);\r\n          }\r\n        },\r\n        err => console.error(err)\r\n      );\r\n    }, 5000);\r\n  }, [destino, seguimientoActivo, obtenerRutaORS]);\r\n\r\n  // Navegación por voz\r\n  const iniciarNavegacionPorVoz = useCallback((instrucciones) => {\r\n  if (!('speechSynthesis' in window)) {\r\n    alert(\"Tu navegador no soporta guía por voz.\");\r\n    return;\r\n  }\r\n\r\n  if (sintesisVozRef.current) {\r\n    window.speechSynthesis.cancel();\r\n  }\r\n\r\n  let paso = 0;\r\n  const hablarInstruccion = () => {\r\n    if (paso >= instrucciones.length) {\r\n      const mensajeLlegada = new SpeechSynthesisUtterance(\r\n        `Has llegado a tu destino. Recorrido total: ${Math.round(distanciaTotal)} metros.`\r\n      );\r\n      mensajeLlegada.onend = reiniciarAppRef.current;\r\n      window.speechSynthesis.speak(mensajeLlegada);\r\n      return;\r\n    }\r\n    const actual = instrucciones[paso];\r\n    const mensaje = new SpeechSynthesisUtterance(\r\n      `${actual.instruccion}. Distancia: ${Math.round(actual.distancia)} metros.`\r\n    );\r\n    sintesisVozRef.current = mensaje;\r\n    window.speechSynthesis.speak(mensaje);\r\n    mensaje.onend = () => {\r\n      paso++;\r\n      setPasoActual(paso);\r\n      setTimeout(hablarInstruccion, 3000);\r\n    };\r\n  };\r\n  hablarInstruccion();\r\n}, [distanciaTotal]);\r\n\r\n  // Calcular ruta + guardar + voz + seguimiento\r\n  const calcularRutaYComienzarNavegacion = useCallback(async (origen, destinoCoords) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `https://api.openrouteservice.org/v2/directions/foot-walking/json`,\r\n        {\r\n          coordinates: [[origen[1], origen[0]], [destinoCoords[1], destinoCoords[0]]],\r\n          instructions: true\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: ORS_KEY,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        }\r\n      );\r\n\r\n      const route = response.data.routes[0];\r\n      const coords = route.geometry.coordinates.map(([lng, lat]) => [lat, lng]);\r\n      setRuta(coords);\r\n\r\n      const pasos = route.segments[0].steps.map(step => ({\r\n        distancia: step.distance,\r\n        duracion: step.duration,\r\n        instruccion: step.instruction\r\n      }));\r\n      setInstruccionesNavegacion(pasos);\r\n      setDistanciaTotal(route.summary.distance);\r\n      setTiempoEstimado(route.summary.duration);\r\n\r\n      iniciarNavegacionPorVoz(pasos);\r\n      setSeguimientoActivo(true);\r\n      iniciarSeguimientoUbicacion();\r\n\r\n      await axios.post('http://localhost:4000/api/guardarRuta', {\r\n        usuarioCorreo: correoUsuario,\r\n        origen: { lat: origen[0], lng: origen[1] },\r\n        destino: { lat: destinoCoords[0], lng: destinoCoords[1] },\r\n        distancia: route.summary.distance,\r\n        duracion: route.summary.duration\r\n      });\r\n    } catch (error) {\r\n      setMensajeError(\"No se pudo calcular la ruta.\");\r\n    }\r\n  }, [ORS_KEY, correoUsuario, iniciarNavegacionPorVoz, iniciarSeguimientoUbicacion]);\r\n\r\n  // Confirmar destino con búsqueda fuzzy\r\n  const confirmarDestino = useCallback(async (nombreLugar) => {\r\n    if (!ubicacion) {\r\n      setMensajeError(\"Ubicación no disponible.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const resp = await axios.get(\r\n        `https://api.openrouteservice.org/geocode/search`,\r\n        {\r\n          params: {\r\n            api_key: ORS_KEY,\r\n            text: nombreLugar,\r\n            'boundary.country': 'CO',\r\n            size: 5\r\n          }\r\n        }\r\n      );\r\n\r\n      const features = resp.data.features;\r\n      if (features.length === 0) {\r\n        setMensajeError(\"No se encontró ese destino.\");\r\n        return;\r\n      }\r\n\r\n      const mejor = features.reduce((mej, actual) => {\r\n        const [lon, lat] = actual.geometry.coordinates;\r\n        const d = Math.hypot(lat - ubicacion[0], lon - ubicacion[1]);\r\n        return !mej || d < mej.distancia\r\n          ? { coords: [lat, lon], distancia: d }\r\n          : mej;\r\n      }, null);\r\n\r\n      if (mejor) {\r\n        setDestino(mejor.coords);\r\n        calcularRutaYComienzarNavegacion(ubicacion, mejor.coords);\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n      setMensajeError(\"No se pudo encontrar la ubicación del destino.\");\r\n    }\r\n  }, [ORS_KEY, ubicacion, calcularRutaYComienzarNavegacion]);\r\n\r\n  // Iniciar reconocimiento de voz\r\n const iniciarReconocimiento = useCallback(() => {\r\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n  if (!SpeechRecognition) {\r\n    alert(\"Tu navegador no soporta reconocimiento de voz.\");\r\n    return;\r\n  }\r\n\r\n  if (temporizadorRef.current) {\r\n    clearTimeout(temporizadorRef.current);\r\n  }\r\n\r\n  window.speechSynthesis.cancel();\r\n  setEstadoConfirmacion(null);\r\n  setMensajeError(\"\");\r\n\r\n  const reconocimiento = new SpeechRecognition();\r\n    reconocimiento.lang = 'es-ES';\r\n    reconocimiento.interimResults = false;\r\n    reconocimiento.maxAlternatives = 1;\r\n    reconocimientoRef.current = reconocimiento;\r\n\r\n    setReconocimientoActivo(true);\r\n\r\n    reconocimiento.onresult = (event) => {\r\n      const texto = event.results[0][0].transcript.toLowerCase();\r\n\r\n      if (texto.includes(\"ayuda\")) {\r\n        window.speechSynthesis.cancel();\r\n        const ayuda = new SpeechSynthesisUtterance(\r\n          \"Para comenzar, otorga los permisos necesarios para activar el micrófono a través de VoiceOver o TalkBack. Luego presiona el botón del micrófono en la parte inferior de la aplicación y di el nombre del destino. Cuando se escuche el destino, da dos toques para confirmar o uno para cancelar. Si necesitas repetir esta ayuda, di la palabra ayuda de nuevo.\"\r\n        );\r\n        window.speechSynthesis.speak(ayuda);\r\n        setReconocimientoActivo(false);\r\n        return;\r\n      }\r\n\r\n      destinoTemporal.current = texto;\r\n      setEstadoConfirmacion('esperando');\r\n\r\n      const mensajeConfirmacion = new SpeechSynthesisUtterance(\r\n        `¿Confirmas el destino ${texto}? Da dos toques para confirmar, o uno para cancelar.`\r\n      );\r\n      window.speechSynthesis.cancel();\r\n      window.speechSynthesis.speak(mensajeConfirmacion);\r\n    };\r\n\r\n    reconocimiento.onerror = () => {\r\n      setMensajeError(\"No se entendió. Intenta de nuevo.\");\r\n      setReconocimientoActivo(false);\r\n    };\r\n\r\n    reconocimiento.onend = () => {\r\n      clearTimeout(temporizadorRef.current);\r\n      setReconocimientoActivo(false);\r\n    };\r\n\r\n    reconocimiento.start();\r\n    temporizadorRef.current = setTimeout(() => reconocimiento.stop(), 6000);\r\n  }, []);\r\n\r\n  // Función para reiniciar la aplicación\r\n  const reiniciarApp = useCallback(() => {\r\n    setDestino(null);\r\n    setRuta([]);\r\n    setInstruccionesNavegacion([]);\r\n    setPasoActual(0);\r\n    setDistanciaTotal(0);\r\n    setTiempoEstimado(0);\r\n    setSeguimientoActivo(false);\r\n    setEstadoConfirmacion(null);\r\n    destinoTemporal.current = \"\";\r\n    window.speechSynthesis.cancel();\r\n    iniciarReconocimiento();\r\n  }, [iniciarReconocimiento]);\r\n\r\n// Asignar función a la ref\r\nreiniciarAppRef.current = reiniciarApp;\r\n\r\n\r\n  // Manejar doble toque para confirmación\r\n  const manejarToquesConfirmacion = useCallback(() => {\r\n    let toques = 0;\r\n    const tiempoEspera = 1000;\r\n\r\n    const handler = () => {\r\n      toques++;\r\n      clearTimeout(temporizadorRef.current);\r\n      temporizadorRef.current = setTimeout(() => {\r\n        if (toques === 2) {\r\n          confirmarDestino(destinoTemporal.current);\r\n          setEstadoConfirmacion('confirmado');\r\n          window.speechSynthesis.cancel();\r\n          const mensajeConfirmado = new SpeechSynthesisUtterance(\r\n            `Destino confirmado. Iniciando la ruta hacia ${destinoTemporal.current}.`\r\n          );\r\n          window.speechSynthesis.speak(mensajeConfirmado);\r\n          detenerRecordatorio();\r\n        } else {\r\n          setDestino(null);\r\n          destinoTemporal.current = \"\";\r\n          setEstadoConfirmacion('cancelado');\r\n          window.speechSynthesis.cancel();\r\n          const mensajeCancelado = new SpeechSynthesisUtterance(\r\n            \"Has cancelado el destino. Presiona el micrófono nuevamente para ingresar un destino nuevo.\"\r\n          );\r\n          window.speechSynthesis.speak(mensajeCancelado);\r\n          iniciarRecordatorio(); \r\n        }\r\n        toques = 0;\r\n      }, tiempoEspera);\r\n    };\r\n\r\n    document.addEventListener('touchstart', handler);\r\n    return () => document.removeEventListener('touchstart', handler);\r\n  }, [confirmarDestino, detenerRecordatorio, iniciarRecordatorio]);\r\n\r\n  // Click en mapa manual\r\n  const ClickMapa = () => {\r\n    useMapEvents({\r\n      click(e) {\r\n        setDestino([e.latlng.lat, e.latlng.lng]);\r\n        setMensajeError(\"\");\r\n      }\r\n    });\r\n    return null;\r\n  };\r\n\r\n  // Efectos\r\n  useEffect(() => {\r\n    if (estadoConfirmacion === 'esperando') {\r\n      const cleanup = manejarToquesConfirmacion();\r\n      return cleanup;\r\n    }\r\n  }, [estadoConfirmacion, manejarToquesConfirmacion]);\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition(\r\n      async pos => {\r\n        const coords = [pos.coords.latitude, pos.coords.longitude];\r\n        setUbicacion(coords);\r\n        await obtenerParadasDeBus(coords);\r\n\r\n        const bienvenida = new SpeechSynthesisUtterance(\r\n          \"¡Inicia la navegacion! presiona el micrófono que está en la parte inferior e ingresa tu destino por voz o di la palabra ayuda para recibir instrucciones\"\r\n        );\r\n        window.speechSynthesis.speak(bienvenida);\r\n\r\n        iniciarRecordatorio(); // llamada segura\r\n      },\r\n      () => alert(\"No se pudo obtener tu ubicación.\")\r\n    );\r\n\r\n    return () => {\r\n      clearInterval(intervaloUbicacionRef.current);\r\n      detenerRecordatorio(); // limpia al desmontar\r\n      window.speechSynthesis.cancel();\r\n    };\r\n  }, [obtenerParadasDeBus, iniciarRecordatorio, detenerRecordatorio]);\r\n\r\n  // Render\r\n  return (\r\n    <div className=\"pagina-ruta-wrapper\">\r\n      <div className=\"menu-ruta\">\r\n        <div className=\"campo-ruta\">\r\n          <label>IR DESDE</label>\r\n          <input\r\n            type=\"text\"\r\n            value=\"Tu ubicación\"\r\n            disabled\r\n            aria-label=\"En la parte superior se encuentran los campos de ubicacion. Tu campo de origen que es tu ubicación actual y el campo de destino que será llenado automáticamente tras dictar por microfono..\"\r\n            tabIndex=\"0\"\r\n          />\r\n        </div>\r\n        <div className=\"campo-ruta\">\r\n          <label>DESTINO</label>\r\n          <input\r\n            type=\"text\"\r\n            value={destinoTemporal.current || \"\"}\r\n            placeholder=\"Presiona el micrófono e indica el destino\"\r\n            readOnly\r\n            aria-label=\"En la parte superior se encuentran los campos de ubicacion. Tu campo de origen que es tu ubicación actual y el campo de destino que será llenado automáticamente tras dictar por microfono..\"\r\n            tabIndex=\"0\"\r\n          />\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"mapa-contenedor\">\r\n        <BotonesModoOscuroPerfil\r\n          modoOscuro={modoOscuro}\r\n          setModoOscuro={setModoOscuro}\r\n          bloquearEventos={bloquearEventos || hablando}\r\n          reconocimientoActivo={reconocimientoActivo || hablando}\r\n        />\r\n        <h2 className=\"titulo-ruta\">Mapa de Ruta</h2>\r\n        <div className=\"mapa-wrapper\">\r\n          {ubicacion && (\r\n            <MapContainer center={ubicacion} zoom={15} className=\"mapa-container\">\r\n              <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n              <ClickMapa />\r\n              <Marker position={ubicacion} icon={L.icon({ iconUrl: 'https://cdn-icons-png.flaticon.com/512/64/64113.png', iconSize: [30, 30] })} />\r\n              {destino && <Marker position={destino} />}\r\n              {ruta.length > 0 && <Polyline positions={ruta} color=\"blue\" />}\r\n              {paradasBus.map((stop, i) => (\r\n                <Marker key={i} position={[stop.geometry.coordinates[1], stop.geometry.coordinates[0]]} icon={L.icon({\r\n                  iconUrl: 'https://cdn-icons-png.flaticon.com/512/2250/2250399.png',\r\n                  iconSize: [20, 20]\r\n                })} />\r\n              ))}\r\n            </MapContainer>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"panel-navegacion\">\r\n          {instruccionesNavegacion.length > 0 && (\r\n            <>\r\n              <div className=\"instruccion-actual\">\r\n                {instruccionesNavegacion[pasoActual]?.instruccion || \"Preparando ruta...\"}\r\n              </div>\r\n              <div className=\"metricas-navegacion\">\r\n                <div className=\"metrica\"><div className=\"metrica-valor\">{Math.round(distanciaTotal)} m</div><div className=\"metrica-label\">Distancia</div></div>\r\n                <div className=\"metrica\"><div className=\"metrica-valor\">{Math.round(tiempoEstimado / 60)} min</div><div className=\"metrica-label\">Tiempo</div></div>\r\n                <div className=\"metrica\"><div className=\"metrica-valor\">{pasoActual + 1}/{instruccionesNavegacion.length}</div><div className=\"metrica-label\">Pasos</div></div>\r\n              </div>\r\n              <button className=\"boton-parar\" onClick={reiniciarApp}>Detener navegación</button>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"contenedor-microfono\">\r\n          <button aria-label=\"Activar micrófono para decir el destino o pedir ayuda\"\r\n                  aria-describedby=\"instruccion-mic\"\r\n                  onClick={iniciarReconocimiento}\r\n                  className=\"boton-microfono\">\r\n            <img src=\"https://cdn-icons-png.flaticon.com/512/4712/4712109.png\" alt=\"Ícono de micrófono\"  className=\"icono-microfono\" aria-hidden=\"true\" />\r\n          </button>\r\n          <span id=\"instruccion-mic\" hidden>\r\n            Presiona este botón para activar el micrófono. Luego, di tu destino o la palabra \"ayuda\" para recibir instrucciones.\r\n          </span>\r\n        </div>\r\n\r\n        {mensajeError && (\r\n          <div className=\"mensaje-error\" role=\"alert\" aria-live=\"assertive\">\r\n            {mensajeError}\r\n          </div>\r\n        )}\r\n        {estadoConfirmacion === 'esperando' && (\r\n        <div className=\"confirmacion-overlay\" role=\"alert\" aria-live=\"assertive\">\r\n          <p>¿Destino \"{destinoTemporal.current}\"?</p>\r\n          <p><strong>Da dos toques para confirmar</strong> o uno para cancelar.</p>\r\n        </div>\r\n        )}\r\n        {estadoConfirmacion === 'confirmado' && (\r\n          <div className=\"confirmacion-exito\" role=\"alert\" aria-live=\"assertive\">\r\n            Destino confirmado\r\n          </div>\r\n        )}\r\n        {estadoConfirmacion === 'cancelado' && (\r\n          <div className=\"confirmacion-cancelado\" role=\"alert\" aria-live=\"assertive\">\r\n            Destino cancelado\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaginaRuta;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}