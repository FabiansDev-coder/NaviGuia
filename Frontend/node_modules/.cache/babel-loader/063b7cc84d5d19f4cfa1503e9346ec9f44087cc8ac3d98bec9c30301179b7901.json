{"ast":null,"code":"var _jsxFileName = \"E:\\\\Descargas\\\\Nueva carpeta\\\\Proyecto Desarrollo 1\\\\Frontend\\\\src\\\\formularios\\\\RegistroDiscapacitados.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BotonesModoOscuroVolver from '../components/BotonesModoOscuroVolver';\nimport { verificarCorreo } from '../utils/verificarCorreo';\nimport '../styles/light.css';\nimport '../stylesdark/dark.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FormularioDiscapacitados() {\n  _s();\n  const [formData, setFormData] = useState({\n    nombre: '',\n    apellido: '',\n    correo: '',\n    password: ''\n  });\n  const [modoOscuro, setModoOscuro] = useState(false);\n  const [correoExistente, setCorreoExistente] = useState(false);\n  const [setValidandoCorreo] = useState(false);\n  const [pasoActual, setPasoActual] = useState(0);\n  const [reconocimientoActivo, setReconocimientoActivo] = useState(false);\n  const [mensajeEnviado, setMensajeEnviado] = useState(false);\n  const [cargando, setCargando] = useState(false);\n  const [bloquearEventos, setBloquearEventos] = useState(false);\n  const recognitionRef = useRef(null);\n  const navigate = useNavigate();\n  const pasoActualRef = useRef(pasoActual);\n  const nombreRef = useRef(null);\n  const apellidoRef = useRef(null);\n  const correoRef = useRef(null);\n  const passwordRef = useRef(null);\n  const resultadoVozRef = useRef('');\n  const pasos = ['nombre', 'apellido', 'correo', 'password', 'registrar'];\n  const instrucciones = {\n    nombre: 'Gracias por preferir nuestra aplicacion, esperamos poder ayudarte al maximo. Para iniciar con el registro de tu cuenta. Por favor, indicanos tu nombre',\n    apellido: 'Ahora por favor, di tu apellido.',\n    correo: 'Ahora indica tu correo electrónico.',\n    password: 'Ahora indica tu contraseña. Debe tener al menos 6 caracteres.',\n    registrar: 'Registrando tu información.'\n  };\n  const referencias = {\n    nombre: nombreRef,\n    apellido: apellidoRef,\n    correo: correoRef,\n    password: passwordRef\n  };\n  const tiemposPorPaso = {\n    nombre: 5000,\n    apellido: 5000,\n    correo: 12000,\n    password: 8000\n  };\n  useEffect(() => {\n    document.body.classList.toggle('dark', modoOscuro);\n    if ('webkitSpeechRecognition' in window) {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.lang = 'es-ES';\n      recognition.continuous = false;\n      recognition.interimResults = false;\n      recognition.onresult = event => {\n        var _event$results, _event$results$, _event$results$$;\n        const resultado = (_event$results = event.results) === null || _event$results === void 0 ? void 0 : (_event$results$ = _event$results[0]) === null || _event$results$ === void 0 ? void 0 : (_event$results$$ = _event$results$[0]) === null || _event$results$$ === void 0 ? void 0 : _event$results$$.transcript.trim().toLowerCase();\n        resultadoVozRef.current = resultado;\n        if (resultado) {\n          manejarResultado(resultado);\n        }\n      };\n      recognition.onend = () => {\n        const resultado = resultadoVozRef.current;\n        if (!resultado) {\n          const paso = pasos[pasoActualRef.current];\n          const campo = paso === 'password' ? 'contraseña' : paso;\n          hablar(`No se escuchó. Por favor, dinos tu ${campo}.`);\n        } else {\n          resultadoVozRef.current = ''; // Limpieza\n        }\n      };\n      recognition.onerror = event => {\n        hablar('Tal vez no se te escuchó o tu mensaje no es valido. Por favor, intentalo de nuevo.');\n        console.error('Reconocimiento error:', event.error);\n      };\n      recognitionRef.current = recognition;\n    }\n    setReconocimientoActivo(true);\n    iniciarPaso(0);\n    // eslint-disable-next-line\n  }, [modoOscuro]);\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (formData.correo) {\n        verificarCorreo(formData.correo, setCorreoExistente);\n      }\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [formData.correo]);\n  useEffect(() => {\n    pasoActualRef.current = pasoActual;\n  }, [pasoActual]);\n  const hablar = (texto, callback = null, autoReconocer = true) => {\n    var _recognitionRef$curre;\n    setReconocimientoActivo(false);\n    setBloquearEventos(true);\n    (_recognitionRef$curre = recognitionRef.current) === null || _recognitionRef$curre === void 0 ? void 0 : _recognitionRef$curre.abort();\n    const msg = new SpeechSynthesisUtterance(texto);\n    msg.lang = 'es-ES';\n    msg.onend = () => {\n      setBloquearEventos(false);\n      if (callback) callback();\n      if (autoReconocer) {\n        setTimeout(() => iniciarReconocimiento(), 350);\n      }\n    };\n    window.speechSynthesis.cancel();\n    window.speechSynthesis.speak(msg);\n  };\n  const iniciarPaso = index => {\n    setPasoActual(index);\n    const paso = pasos[index];\n    const ref = referencias[paso];\n    if (ref !== null && ref !== void 0 && ref.current) ref.current.focus();\n    setTimeout(() => {\n      hablar(instrucciones[paso]);\n    }, 400);\n  };\n  const avanzarPaso = () => {\n    setPasoActual(prevPaso => {\n      const siguiente = Math.min(prevPaso + 1, pasos.length - 1);\n      if (pasos[siguiente] === 'registrar') {\n        var _recognitionRef$curre2;\n        setPasoActual(siguiente);\n        (_recognitionRef$curre2 = recognitionRef.current) === null || _recognitionRef$curre2 === void 0 ? void 0 : _recognitionRef$curre2.abort(); // Cancela reconocimiento\n        hablar(instrucciones.registrar, () => {\n          // Espera un poco después de hablar y luego envía el formulario\n          setTimeout(manejarEnvioFormulario, 1000);\n        }, false);\n      } else {\n        setTimeout(() => iniciarPaso(siguiente), 250);\n      }\n      return siguiente;\n    });\n  };\n  useEffect(() => {\n    if (formData.nombre && formData.apellido && formData.correo && formData.password.length >= 6 && !correoExistente && pasoActual === pasos.length - 1 && !mensajeEnviado) {\n      manejarEnvioFormulario();\n    } // eslint-disable-next-line\n  }, [formData, correoExistente, pasoActual]);\n  const reproducirBeep = () => {\n    const context = new (window.AudioContext || window.webkitAudioContext)();\n    const o = context.createOscillator();\n    const g = context.createGain();\n    o.type = 'sine';\n    o.frequency.value = 1000;\n    o.connect(g);\n    g.connect(context.destination);\n    o.start();\n    g.gain.exponentialRampToValueAtTime(0.0001, context.currentTime + 0.1);\n    o.stop(context.currentTime + 0.1); // Detiene correctamente\n  };\n  let timeoutReconocimiento;\n  const iniciarReconocimiento = () => {\n    if (!recognitionRef.current) return;\n    try {\n      recognitionRef.current.abort();\n      resultadoVozRef.current = '';\n      recognitionRef.current.start();\n      setReconocimientoActivo(true);\n      const paso = pasos[pasoActualRef.current];\n      const duracion = tiemposPorPaso[paso] || 7000;\n      clearTimeout(timeoutReconocimiento);\n      timeoutReconocimiento = setTimeout(() => {\n        var _recognitionRef$curre3;\n        (_recognitionRef$curre3 = recognitionRef.current) === null || _recognitionRef$curre3 === void 0 ? void 0 : _recognitionRef$curre3.stop();\n        setReconocimientoActivo(false);\n        reproducirBeep();\n      }, duracion);\n    } catch (error) {\n      console.error('Error iniciando reconocimiento:', error);\n      hablar('Hubo un error iniciando el micrófono.');\n    }\n  };\n  const formatearNombre = texto => {\n    return texto.normalize('NFD') // Elimina tildes\n    .replace(/[\\u0300-\\u036f]/g, '') // Más limpieza de tildes\n    .replace(/[^a-zA-Z\\s]/g, '') // Elimina caracteres especiales\n    .replace(/\\s+/g, ' ') // Reduce múltiples espacios a uno solo\n    .trim() // Quita espacios al inicio y final\n    .toLowerCase().replace(/(^\\w{1})|(\\s+\\w{1})/g, l => l.toUpperCase()); // Capitaliza\n  };\n  const manejarResultado = resultado => {\n    const paso = pasos[pasoActualRef.current];\n    switch (paso) {\n      case 'nombre':\n      case 'apellido':\n        const valorLimpio = formatearNombre(resultado);\n        if (!valorLimpio) {\n          hablar(`El ${paso} no puede contener símbolos ni quedar vacío. Por favor, di tu ${paso} nuevamente.`, () => iniciarPaso(pasoActualRef.current));\n        } else {\n          setFormData(prev => ({\n            ...prev,\n            [paso]: valorLimpio\n          }));\n          avanzarPaso();\n        }\n        break;\n      case 'correo':\n        {\n          let correo = resultado.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '').toLowerCase().replace(/\\s+/g, '').replace(/arroba/g, '@').replace(/punto/g, '.').replace(/guionbajo|guion bajo/g, '_').replace(/guion/g, '-');\n          const tieneArroba = correo.includes('@');\n          const tienePunto = correo.includes('.');\n          const terminaConDominio = /\\.(com|co|org|edu|net|gov|io|es)$/.test(correo);\n          if (tieneArroba && tienePunto && terminaConDominio) {\n            verificarCorreo(correo, existe => {\n              if (existe) {\n                setCorreoExistente(true);\n                hablar('Este correo ya está registrado. Por favor, di un correo diferente.', () => iniciarPaso(pasoActualRef.current));\n              } else {\n                setCorreoExistente(false);\n                setFormData(prev => ({\n                  ...prev,\n                  correo\n                }));\n                avanzarPaso();\n              }\n            }, setValidandoCorreo);\n          } else {\n            hablar('Ese correo no parece válido. Inténtalo de nuevo.', () => iniciarPaso(pasoActualRef.current));\n          }\n          break;\n        }\n      case 'password':\n        {\n          // Elimina todos los espacios entre palabras dictadas\n          const passwordSinEspacios = resultado.replace(/\\s+/g, '');\n          if (passwordSinEspacios.length < 6) {\n            hablar('La contraseña debe tener al menos 6 caracteres y no debe contener espacios. Por favor, di tu contraseña nuevamente.', () => iniciarPaso(pasoActualRef.current));\n          } else {\n            setFormData(prev => ({\n              ...prev,\n              password: passwordSinEspacios\n            }));\n            avanzarPaso();\n          }\n          break;\n        }\n      default:\n        break;\n    }\n  };\n  const manejarEnvioFormulario = async () => {\n    const nuevosErrores = {\n      nombre: !formData.nombre.trim() ? 'El nombre es obligatorio.' : !soloLetrasYEspacios(formData.nombre) ? 'El nombre solo debe contener letras.' : '',\n      apellido: !formData.apellido.trim() ? 'El apellido es obligatorio.' : !soloLetrasYEspacios(formData.apellido) ? 'El apellido solo debe contener letras.' : '',\n      correo: !formData.correo.trim() ? 'El correo es obligatorio.' : '',\n      password: formData.password.length < 6 ? 'La contraseña debe tener al menos 6 caracteres.' : ''\n    };\n    setErroresCampos(nuevosErrores);\n    if (Object.values(nuevosErrores).some(msg => msg)) {\n      hablar('Por favor corrige los campos indicados.');\n      return;\n    }\n    if (correoExistente) return hablar('Este correo ya está registrado.', () => iniciarPaso(2));\n    try {\n      setCargando(true);\n      const res = await fetch('http://localhost:4000/api/RegistroDiscapacitados', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n      if (res.ok) {\n        setMensajeEnviado(true);\n        hablar('¡Registro exitoso! Serás redirigido al inicio de sesión.', () => navigate('/login'), false);\n      } else {\n        const err = await res.json();\n        hablar(`Error al registrar: ${err.message || 'Intenta más tarde'}`);\n      }\n    } catch (err) {\n      console.error(err);\n      hablar('Ocurrió un error al conectar con el servidor. Intenta más tarde.');\n    } finally {\n      setCargando(false);\n    }\n  };\n  const soloLetrasYEspacios = texto => {\n    return /^[a-zA-Z\\s]*$/.test(texto); // ✅ Solo letras (a-z, A-Z) y espacios\n  };\n  const [erroresCampos, setErroresCampos] = useState({\n    nombre: '',\n    apellido: '',\n    correo: '',\n    password: ''\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BotonesModoOscuroVolver, {\n      modoOscuro: modoOscuro,\n      setModoOscuro: setModoOscuro,\n      bloquearEventos: bloquearEventos,\n      reconocimientoActivo: reconocimientoActivo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contenedor-microfono\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        \"aria-label\": \"Activar micr\\xF3fono para dictar informaci\\xF3n\",\n        \"aria-describedby\": \"instruccion-mic\",\n        onClick: iniciarReconocimiento,\n        disabled: cargando,\n        className: `boton-microfono ${reconocimientoActivo ? 'activo' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: reconocimientoActivo ? 'https://cdn-icons-png.flaticon.com/512/4712/4712035.png' : 'https://cdn-icons-png.flaticon.com/512/4712/4712109.png',\n          alt: reconocimientoActivo ? 'Micrófono activo' : 'Micrófono inactivo',\n          className: \"icono-microfono\",\n          \"aria-hidden\": \"true\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"instruccion-mic\",\n        hidden: true,\n        children: \"Presiona este bot\\xF3n para activar el micr\\xF3fono. Luego, sigue las instrucciones habladas.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 9\n      }, this), cargando && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cargando-voz\",\n        children: \"Procesando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 22\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"registro-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => e.preventDefault(),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Formulario de Registro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nombre\",\n          children: [\"Nombre\", erroresCampos.nombre && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-campo\",\n            children: [\" * \", erroresCampos.nombre]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: nombreRef,\n          type: \"text\",\n          id: \"nombre\",\n          name: \"nombre\",\n          value: formData.nombre,\n          onChange: e => {\n            const valor = e.target.value;\n            if (!valor.trim()) {\n              setErroresCampos(prev => ({\n                ...prev,\n                nombre: 'El nombre es obligatorio.'\n              }));\n            } else if (!soloLetrasYEspacios(valor)) {\n              setErroresCampos(prev => ({\n                ...prev,\n                nombre: 'El nombre solo debe contener letras.'\n              }));\n            } else {\n              setErroresCampos(prev => ({\n                ...prev,\n                nombre: ''\n              }));\n              setFormData(prev => ({\n                ...prev,\n                nombre: valor\n              }));\n            }\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"apellido\",\n          children: [\"Apellido\", erroresCampos.apellido && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-campo\",\n            children: [\" * \", erroresCampos.apellido]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: apellidoRef,\n          type: \"text\",\n          id: \"apellido\",\n          name: \"apellido\",\n          value: formData.apellido,\n          onChange: e => {\n            const valor = e.target.value;\n            if (!valor.trim()) {\n              setErroresCampos(prev => ({\n                ...prev,\n                apellido: 'El apellido es obligatorio.'\n              }));\n            } else if (!soloLetrasYEspacios(valor)) {\n              setErroresCampos(prev => ({\n                ...prev,\n                apellido: 'El apellido solo debe contener letras.'\n              }));\n            } else {\n              setErroresCampos(prev => ({\n                ...prev,\n                apellido: ''\n              }));\n              setFormData(prev => ({\n                ...prev,\n                apellido: valor\n              }));\n            }\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"correo\",\n          children: [\"Correo electr\\xF3nico:\", correoExistente && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"correo-registrado\",\n            children: \" * Este correo ya est\\xE1 registrado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 15\n          }, this), erroresCampos.correo && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-campo\",\n            children: [\" * \", erroresCampos.correo]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: correoRef,\n          type: \"email\",\n          id: \"correo\",\n          name: \"correo\",\n          value: formData.correo,\n          onChange: e => {\n            setFormData(prev => ({\n              ...prev,\n              correo: e.target.value\n            }));\n            setErroresCampos(prev => ({\n              ...prev,\n              correo: ''\n            })); // Limpia el error si escribe algo\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: [\"Contrase\\xF1a (m\\xEDnimo 6 caracteres)\", erroresCampos.password && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-campo\",\n            children: [\" * \", erroresCampos.password]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          ref: passwordRef,\n          type: \"password\",\n          id: \"password\",\n          name: \"password\",\n          value: formData.password,\n          onChange: e => {\n            const valorSinEspacios = e.target.value.replace(/\\s+/g, '');\n            setFormData(prev => ({\n              ...prev,\n              password: valorSinEspacios\n            }));\n            if (valorSinEspacios.length < 6) {\n              setErroresCampos(prev => ({\n                ...prev,\n                password: 'La contraseña debe tener al menos 6 caracteres.'\n              }));\n            } else {\n              setErroresCampos(prev => ({\n                ...prev,\n                password: ''\n              }));\n            }\n          },\n          onKeyDown: e => {\n            if (e.key === ' ') e.preventDefault();\n          },\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"botones-envio\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn-enviar\",\n            onClick: manejarEnvioFormulario,\n            disabled: cargando,\n            children: cargando ? 'Procesando...' : 'Registrarse'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"texto-cuenta\",\n            children: [\"\\xBFYa tienes una cuenta?\", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn-iniciar-sesion\",\n              onClick: () => navigate('/login'),\n              disabled: cargando,\n              children: \"Inicia sesi\\xF3n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(FormularioDiscapacitados, \"HGlGlgcXprEX6OuQVsnzpWYVHLU=\", false, function () {\n  return [useNavigate];\n});\n_c = FormularioDiscapacitados;\nexport default FormularioDiscapacitados;\nvar _c;\n$RefreshReg$(_c, \"FormularioDiscapacitados\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","BotonesModoOscuroVolver","verificarCorreo","jsxDEV","_jsxDEV","Fragment","_Fragment","FormularioDiscapacitados","_s","formData","setFormData","nombre","apellido","correo","password","modoOscuro","setModoOscuro","correoExistente","setCorreoExistente","setValidandoCorreo","pasoActual","setPasoActual","reconocimientoActivo","setReconocimientoActivo","mensajeEnviado","setMensajeEnviado","cargando","setCargando","bloquearEventos","setBloquearEventos","recognitionRef","navigate","pasoActualRef","nombreRef","apellidoRef","correoRef","passwordRef","resultadoVozRef","pasos","instrucciones","registrar","referencias","tiemposPorPaso","document","body","classList","toggle","window","recognition","webkitSpeechRecognition","lang","continuous","interimResults","onresult","event","_event$results","_event$results$","_event$results$$","resultado","results","transcript","trim","toLowerCase","current","manejarResultado","onend","paso","campo","hablar","onerror","console","error","iniciarPaso","timer","setTimeout","clearTimeout","texto","callback","autoReconocer","_recognitionRef$curre","abort","msg","SpeechSynthesisUtterance","iniciarReconocimiento","speechSynthesis","cancel","speak","index","ref","focus","avanzarPaso","prevPaso","siguiente","Math","min","length","_recognitionRef$curre2","manejarEnvioFormulario","reproducirBeep","context","AudioContext","webkitAudioContext","o","createOscillator","g","createGain","type","frequency","value","connect","destination","start","gain","exponentialRampToValueAtTime","currentTime","stop","timeoutReconocimiento","duracion","_recognitionRef$curre3","formatearNombre","normalize","replace","l","toUpperCase","valorLimpio","prev","tieneArroba","includes","tienePunto","terminaConDominio","test","existe","passwordSinEspacios","nuevosErrores","soloLetrasYEspacios","setErroresCampos","Object","values","some","res","fetch","method","headers","JSON","stringify","ok","err","json","message","erroresCampos","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","disabled","src","alt","id","hidden","onSubmit","e","preventDefault","htmlFor","name","onChange","valor","target","required","valorSinEspacios","onKeyDown","key","_c","$RefreshReg$"],"sources":["E:/Descargas/Nueva carpeta/Proyecto Desarrollo 1/Frontend/src/formularios/RegistroDiscapacitados.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport BotonesModoOscuroVolver from '../components/BotonesModoOscuroVolver';\nimport { verificarCorreo } from '../utils/verificarCorreo';\nimport '../styles/light.css';\nimport '../stylesdark/dark.css';\n\nfunction FormularioDiscapacitados() {\n  const [formData, setFormData] = useState({\n    nombre: '',\n    apellido: '',\n    correo: '',\n    password: ''\n  });\n\n  const [modoOscuro, setModoOscuro] = useState(false);\n  const [correoExistente, setCorreoExistente] = useState(false);\n  const [setValidandoCorreo] = useState(false);\n  const [pasoActual, setPasoActual] = useState(0);\n  const [reconocimientoActivo, setReconocimientoActivo] = useState(false);\n  const [mensajeEnviado, setMensajeEnviado] = useState(false);\n  const [cargando, setCargando] = useState(false);\n  const [bloquearEventos, setBloquearEventos] = useState(false);\n  const recognitionRef = useRef(null);\n  const navigate = useNavigate();\n\n  const pasoActualRef = useRef(pasoActual);\n  const nombreRef = useRef(null);\n  const apellidoRef = useRef(null);\n  const correoRef = useRef(null);\n  const passwordRef = useRef(null);\n  const resultadoVozRef = useRef('');\n\n  const pasos = ['nombre', 'apellido', 'correo', 'password', 'registrar'];\n\n  const instrucciones = {\n    nombre: 'Gracias por preferir nuestra aplicacion, esperamos poder ayudarte al maximo. Para iniciar con el registro de tu cuenta. Por favor, indicanos tu nombre',\n    apellido: 'Ahora por favor, di tu apellido.',\n    correo: 'Ahora indica tu correo electrónico.',\n    password: 'Ahora indica tu contraseña. Debe tener al menos 6 caracteres.',\n    registrar: 'Registrando tu información.'\n  };\n\n  const referencias = {\n    nombre: nombreRef,\n    apellido: apellidoRef,\n    correo: correoRef,\n    password: passwordRef\n  };\n\n  const tiemposPorPaso = {\n    nombre: 5000,\n    apellido: 5000,\n    correo: 12000,\n    password: 8000\n  };\n\n  useEffect(() => {\n    document.body.classList.toggle('dark', modoOscuro);\n\n    if ('webkitSpeechRecognition' in window) {\n      const recognition = new window.webkitSpeechRecognition();\n      recognition.lang = 'es-ES';\n      recognition.continuous = false;\n      recognition.interimResults = false;\n\n      recognition.onresult = (event) => {\n        const resultado = event.results?.[0]?.[0]?.transcript.trim().toLowerCase();\n        resultadoVozRef.current = resultado;\n        if (resultado) {\n          manejarResultado(resultado);\n        }\n      };\n\n      recognition.onend = () => {\n        const resultado = resultadoVozRef.current;\n        if (!resultado) {\n          const paso = pasos[pasoActualRef.current];\n          const campo = paso === 'password' ? 'contraseña' : paso;\n          hablar(`No se escuchó. Por favor, dinos tu ${campo}.`);\n        } else {\n          resultadoVozRef.current = ''; // Limpieza\n        }\n      };\n\n      recognition.onerror = (event) => {\n        hablar('Tal vez no se te escuchó o tu mensaje no es valido. Por favor, intentalo de nuevo.');\n        console.error('Reconocimiento error:', event.error);\n      };\n\n      recognitionRef.current = recognition;\n    }\n\n    setReconocimientoActivo(true);\n    iniciarPaso(0);\n    // eslint-disable-next-line\n  }, [modoOscuro]);\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      if (formData.correo) {\n        verificarCorreo(formData.correo, setCorreoExistente);\n      }\n    }, 500);\n    return () => clearTimeout(timer);\n  }, [formData.correo]);\n\n  useEffect(() => {\n    pasoActualRef.current = pasoActual;\n  }, [pasoActual]);\n\n  const hablar = (texto, callback = null, autoReconocer = true) => {\n    setReconocimientoActivo(false);\n    setBloquearEventos(true); \n\n    recognitionRef.current?.abort();\n\n    const msg = new SpeechSynthesisUtterance(texto);\n    msg.lang = 'es-ES';\n    msg.onend = () => {\n      setBloquearEventos(false); \n      if (callback) callback();\n      if (autoReconocer) {\n        setTimeout(() => iniciarReconocimiento(), 350);\n      }\n    };\n\n    window.speechSynthesis.cancel();\n    window.speechSynthesis.speak(msg);\n  };\n\n  const iniciarPaso = (index) => {\n    setPasoActual(index);\n    const paso = pasos[index];\n    const ref = referencias[paso];\n    if (ref?.current) ref.current.focus();\n\n    setTimeout(() => {\n      hablar(instrucciones[paso]);\n    }, 400);\n  };\n\n  const avanzarPaso = () => {\n    setPasoActual(prevPaso => {\n      const siguiente = Math.min(prevPaso + 1, pasos.length - 1);\n\n      if (pasos[siguiente] === 'registrar') {\n        setPasoActual(siguiente);\n        recognitionRef.current?.abort(); // Cancela reconocimiento\n        hablar(instrucciones.registrar, () => {\n          // Espera un poco después de hablar y luego envía el formulario\n          setTimeout(manejarEnvioFormulario, 1000);\n        }, false);\n      } else {\n        setTimeout(() => iniciarPaso(siguiente), 250);\n      }\n\n      return siguiente;\n    });\n  };\n\n  useEffect(() => {\n    if (\n      formData.nombre &&\n      formData.apellido &&\n      formData.correo &&\n      formData.password.length >= 6 &&\n      !correoExistente &&\n      pasoActual === pasos.length - 1 &&\n      !mensajeEnviado\n    ) {\n      manejarEnvioFormulario();\n    } // eslint-disable-next-line\n  }, [formData, correoExistente, pasoActual]);\n\n  const reproducirBeep = () => {\n    const context = new (window.AudioContext || window.webkitAudioContext)();\n    const o = context.createOscillator();\n    const g = context.createGain();\n\n    o.type = 'sine';\n    o.frequency.value = 1000;\n\n    o.connect(g);\n    g.connect(context.destination);\n\n    o.start();\n    g.gain.exponentialRampToValueAtTime(0.0001, context.currentTime + 0.1);\n\n    o.stop(context.currentTime + 0.1); // Detiene correctamente\n  };\n\n  let timeoutReconocimiento;\n\n  const iniciarReconocimiento = () => {\n    if (!recognitionRef.current) return;\n    try {\n      recognitionRef.current.abort();\n      resultadoVozRef.current = '';\n      recognitionRef.current.start();\n      setReconocimientoActivo(true);\n\n      const paso = pasos[pasoActualRef.current];\n      const duracion = tiemposPorPaso[paso] || 7000;\n\n      clearTimeout(timeoutReconocimiento);\n      timeoutReconocimiento = setTimeout(() => {\n        recognitionRef.current?.stop();\n        setReconocimientoActivo(false);\n        reproducirBeep();\n      }, duracion);\n\n    } catch (error) {\n      console.error('Error iniciando reconocimiento:', error);\n      hablar('Hubo un error iniciando el micrófono.');\n    }\n  };\n\n  const formatearNombre = (texto) => {\n  return texto\n    .normalize('NFD')                         // Elimina tildes\n    .replace(/[\\u0300-\\u036f]/g, '')          // Más limpieza de tildes\n    .replace(/[^a-zA-Z\\s]/g, '')              // Elimina caracteres especiales\n    .replace(/\\s+/g, ' ')                     // Reduce múltiples espacios a uno solo\n    .trim()                                   // Quita espacios al inicio y final\n    .toLowerCase()\n    .replace(/(^\\w{1})|(\\s+\\w{1})/g, l => l.toUpperCase()); // Capitaliza\n};\n\n  const manejarResultado = (resultado) => {\n    const paso = pasos[pasoActualRef.current];\n    switch (paso) {\n      case 'nombre':\n      case 'apellido':\n        const valorLimpio = formatearNombre(resultado);\n        if (!valorLimpio) {\n          hablar(`El ${paso} no puede contener símbolos ni quedar vacío. Por favor, di tu ${paso} nuevamente.`, () => iniciarPaso(pasoActualRef.current));\n        } else {\n          setFormData(prev => ({ ...prev, [paso]: valorLimpio }));\n          avanzarPaso();\n        }\n        break;\n\n      case 'correo': {\n        let correo = resultado\n          .normalize('NFD').replace(/[\\u0300-\\u036f]/g, '')\n          .toLowerCase()\n          .replace(/\\s+/g, '')\n          .replace(/arroba/g, '@')\n          .replace(/punto/g, '.')\n          .replace(/guionbajo|guion bajo/g, '_')\n          .replace(/guion/g, '-');\n\n        const tieneArroba = correo.includes('@');\n        const tienePunto = correo.includes('.');\n        const terminaConDominio = /\\.(com|co|org|edu|net|gov|io|es)$/.test(correo);\n\n        if (tieneArroba && tienePunto && terminaConDominio) {\n          verificarCorreo(correo, (existe) => {\n            if (existe) {\n              setCorreoExistente(true);\n              hablar('Este correo ya está registrado. Por favor, di un correo diferente.', () => iniciarPaso(pasoActualRef.current));\n            } else {\n              setCorreoExistente(false);\n              setFormData(prev => ({ ...prev, correo }));\n              avanzarPaso();\n            }\n          }, setValidandoCorreo);\n        } else {\n          hablar('Ese correo no parece válido. Inténtalo de nuevo.', () => iniciarPaso(pasoActualRef.current));\n        }\n        break;\n      }\n\n      case 'password': {\n        // Elimina todos los espacios entre palabras dictadas\n        const passwordSinEspacios = resultado.replace(/\\s+/g, '');\n\n        if (passwordSinEspacios.length < 6) {\n          hablar(\n            'La contraseña debe tener al menos 6 caracteres y no debe contener espacios. Por favor, di tu contraseña nuevamente.',\n            () => iniciarPaso(pasoActualRef.current)\n          );\n        } else {\n          setFormData(prev => ({\n            ...prev,\n            password: passwordSinEspacios,\n          }));\n          avanzarPaso();\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  };\n\n  const manejarEnvioFormulario = async () => {\n  const nuevosErrores = {\n    nombre: !formData.nombre.trim()\n      ? 'El nombre es obligatorio.'\n      : !soloLetrasYEspacios(formData.nombre)\n        ? 'El nombre solo debe contener letras.'\n        : '',\n\n    apellido: !formData.apellido.trim()\n      ? 'El apellido es obligatorio.'\n      : !soloLetrasYEspacios(formData.apellido)\n        ? 'El apellido solo debe contener letras.'\n        : '',\n\n    correo: !formData.correo.trim()\n      ? 'El correo es obligatorio.'\n      : '',\n\n    password: formData.password.length < 6\n      ? 'La contraseña debe tener al menos 6 caracteres.'\n      : ''\n  };\n\n  setErroresCampos(nuevosErrores);\n\n  if (Object.values(nuevosErrores).some(msg => msg)) {\n    hablar('Por favor corrige los campos indicados.');\n    return;\n  }\n\n\n  if (correoExistente) return hablar('Este correo ya está registrado.', () => iniciarPaso(2));\n\n  try {\n    setCargando(true);\n    const res = await fetch('http://localhost:4000/api/RegistroDiscapacitados', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(formData)\n    });\n\n    if (res.ok) {\n      setMensajeEnviado(true);\n      hablar('¡Registro exitoso! Serás redirigido al inicio de sesión.', () => navigate('/login'), false);\n    } else {\n      const err = await res.json();\n      hablar(`Error al registrar: ${err.message || 'Intenta más tarde'}`);\n    }\n  } catch (err) {\n    console.error(err);\n    hablar('Ocurrió un error al conectar con el servidor. Intenta más tarde.');\n  } finally {\n    setCargando(false);\n  }\n};\n\n  const soloLetrasYEspacios = (texto) => {\n    return /^[a-zA-Z\\s]*$/.test(texto);  // ✅ Solo letras (a-z, A-Z) y espacios\n  };\n\n  const [erroresCampos, setErroresCampos] = useState({\n    nombre: '',\n    apellido: '',\n    correo: '',\n    password: ''\n  });\n\n  return (\n    <>\n      <BotonesModoOscuroVolver\n        modoOscuro={modoOscuro}\n        setModoOscuro={setModoOscuro}\n        bloquearEventos={bloquearEventos}\n        reconocimientoActivo={reconocimientoActivo}\n      />\n\n      <div className=\"contenedor-microfono\">\n        <button\n          aria-label=\"Activar micrófono para dictar información\"\n          aria-describedby=\"instruccion-mic\"\n          onClick={iniciarReconocimiento}\n          disabled={cargando}\n          className={`boton-microfono ${reconocimientoActivo ? 'activo' : ''}`}\n        >\n          <img\n            src={\n              reconocimientoActivo\n                ? 'https://cdn-icons-png.flaticon.com/512/4712/4712035.png'\n                : 'https://cdn-icons-png.flaticon.com/512/4712/4712109.png'\n            }\n            alt={reconocimientoActivo ? 'Micrófono activo' : 'Micrófono inactivo'}\n            className=\"icono-microfono\"\n            aria-hidden=\"true\"\n          />\n        </button>\n        <span id=\"instruccion-mic\" hidden>\n          Presiona este botón para activar el micrófono. Luego, sigue las instrucciones habladas.\n        </span>\n        {cargando && <div className=\"cargando-voz\">Procesando...</div>}\n      </div>\n\n      <div className=\"registro-container\">\n        <form onSubmit={(e) => e.preventDefault()}>\n          <h2>Formulario de Registro</h2>\n\n          <label htmlFor=\"nombre\">\n            Nombre\n            {erroresCampos.nombre && (\n              <span className=\"error-campo\"> * {erroresCampos.nombre}</span>\n            )}\n          </label>\n          <input\n            ref={nombreRef}\n            type=\"text\"\n            id=\"nombre\"\n            name=\"nombre\"\n            value={formData.nombre}\n            onChange={(e) => {\n              const valor = e.target.value;\n              if (!valor.trim()) {\n                setErroresCampos((prev) => ({ ...prev, nombre: 'El nombre es obligatorio.' }));\n              } else if (!soloLetrasYEspacios(valor)) {\n                setErroresCampos((prev) => ({ ...prev, nombre: 'El nombre solo debe contener letras.' }));\n              } else {\n                setErroresCampos((prev) => ({ ...prev, nombre: '' }));\n                setFormData((prev) => ({ ...prev, nombre: valor }));\n              }\n            }}\n            required\n          />\n\n          <label htmlFor=\"apellido\">\n            Apellido\n            {erroresCampos.apellido && (\n              <span className=\"error-campo\"> * {erroresCampos.apellido}</span>\n            )}\n          </label>\n          <input\n            ref={apellidoRef}\n            type=\"text\"\n            id=\"apellido\"\n            name=\"apellido\"\n            value={formData.apellido}\n            onChange={(e) => {\n              const valor = e.target.value;\n              if (!valor.trim()) {\n                setErroresCampos((prev) => ({ ...prev, apellido: 'El apellido es obligatorio.' }));\n              } else if (!soloLetrasYEspacios(valor)) {\n                setErroresCampos((prev) => ({ ...prev, apellido: 'El apellido solo debe contener letras.' }));\n              } else {\n                setErroresCampos((prev) => ({ ...prev, apellido: '' }));\n                setFormData((prev) => ({ ...prev, apellido: valor }));\n              }\n            }}\n            required\n          />\n\n          <label htmlFor=\"correo\">\n            Correo electrónico:\n            {correoExistente && (\n              <span className=\"correo-registrado\"> * Este correo ya está registrado</span>\n            )}\n            {erroresCampos.correo && (\n              <span className=\"error-campo\"> * {erroresCampos.correo}</span>\n            )}\n          </label>\n          <input\n            ref={correoRef}\n            type=\"email\"\n            id=\"correo\"\n            name=\"correo\"\n            value={formData.correo}\n            onChange={(e) => {\n              setFormData((prev) => ({ ...prev, correo: e.target.value }));\n              setErroresCampos((prev) => ({ ...prev, correo: '' })); // Limpia el error si escribe algo\n            }}\n            required\n          />\n\n          <label htmlFor=\"password\">\n            Contraseña (mínimo 6 caracteres)\n            {erroresCampos.password && (\n              <span className=\"error-campo\"> * {erroresCampos.password}</span>\n            )}\n          </label>\n          <input\n            ref={passwordRef}\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={(e) => {\n              const valorSinEspacios = e.target.value.replace(/\\s+/g, '');\n              setFormData((prev) => ({ ...prev, password: valorSinEspacios }));\n              if (valorSinEspacios.length < 6) {\n                setErroresCampos((prev) => ({\n                  ...prev,\n                  password: 'La contraseña debe tener al menos 6 caracteres.'\n                }));\n              } else {\n                setErroresCampos((prev) => ({ ...prev, password: '' }));\n              }\n            }}\n            onKeyDown={(e) => {\n              if (e.key === ' ') e.preventDefault();\n            }}\n            required\n          />\n\n          <div className=\"botones-envio\">\n            <button\n              type=\"button\"\n              className=\"btn-enviar\"\n              onClick={manejarEnvioFormulario}\n              disabled={cargando}\n            >\n              {cargando ? 'Procesando...' : 'Registrarse'}\n            </button>\n            <div className=\"texto-cuenta\">\n              ¿Ya tienes una cuenta?{' '}\n              <button\n                type=\"button\"\n                className=\"btn-iniciar-sesion\"\n                onClick={() => navigate('/login')}\n                disabled={cargando}\n              >\n                Inicia sesión\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default FormularioDiscapacitados;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}